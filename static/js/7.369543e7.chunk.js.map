{"version":3,"sources":["app/components/admin/body/upload-img/UpImages.js","app/actions/custommer/products/Product.js","app/untils/callAPI.js"],"names":["UpImages","props","listCarts","useSelector","state","GetProductDatabase","console","log","history","useHistory","dispatch","useDispatch","useState","loading","setLoading","setSubmitted","image","setImage","list","path","listImage","productID","setState","name","quantity_in_stock","price","description","category_id","htx_id","user_id","isDeleted","ID_Product","id_Image","link_img","inputs","setInputs","edit","useEffect","connectImgToProduct","numberCart","handleChange","event","target","value","uploadImage","e","a","files","data","FormData","append","fetch","method","body","res","json","file","secure_url","type","url","axios","post","then","userID","err","upProduct","product","length","forEach","element","index","connect","image_id","parseInt","product_image","main_image","updateProduct","alert","put","id","push","actions","className","onSubmit","preventDefault","htmlFor","onChange","placeholder","multiple","src","style","width","height","objectFit","alt","display","maxWidth","margin","flexWrap","map","key","padding","IDName","types","getProduct","addProductToCart","payload","deleteProductInCart","getIncrease_Quantity","getDecrease_Quantity","getBill_ID","bill_id","getUSER_ID","actLoadProductListRequest","endPoint","headers","Config","actLoadProductList","dataProduct"],"mappings":"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","file":"static/js/7.369543e7.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport \"./checkout.scss\";\r\nimport * as actions from \"../../../../actions/custommer/products/Product\";\r\nfunction UpImages(props) {\r\n  const listCarts = useSelector((state) => state.GetProductDatabase);\r\n  console.log(listCarts);\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [image, setImage] = useState(\"\");\r\n\r\n  const [state, setState] = useState({\r\n    list: [],\r\n    path: [],\r\n    listImage: [],\r\n    productID: [],\r\n  });\r\n\r\n  const [inputs, setInputs] = useState({\r\n    name: \"\",\r\n    quantity_in_stock: 0,\r\n    price: 0,\r\n    description: \"\",\r\n    category_id: 5,\r\n    htx_id: 7,\r\n    user_id: 12,\r\n    isDeleted: 1,\r\n    ID_Product: 300,\r\n    id_Image: \"\",\r\n    link_img:\r\n      \"https://res.cloudinary.com/cv-thav-herokuapp-com/image/upload/v1615482832/laptop/lwms3vb9kvur0juw4l8y.jpg\",\r\n  });\r\n\r\n  console.log(inputs);\r\n\r\n  const [edit, setEdit] = useState([]);\r\n  console.log(edit);\r\n  useEffect(() => {\r\n    connectImgToProduct();\r\n    if (listCarts.numberCart !== 0) {\r\n      setInputs(listCarts.edit);\r\n    }\r\n  }, [state.productID, listCarts.numberCart]);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setInputs((inputs) => ({ ...inputs, [name]: value }));\r\n  };\r\n\r\n  const uploadImage = async (e) => {\r\n    const files = e.target.files;\r\n    const data = new FormData();\r\n    data.append(\"file\", files[0]);\r\n    data.append(\"upload_preset\", \"laptop\");\r\n    setLoading(true);\r\n\r\n    const res = await fetch(\r\n      \"https://api.cloudinary.com/v1_1/cv-thav-herokuapp-com/image/upload\",\r\n      {\r\n        method: \"POST\",\r\n        body: data,\r\n      }\r\n    );\r\n\r\n    const file = await res.json();\r\n    setImage(file.secure_url);\r\n    setLoading(false);\r\n    let image = {\r\n      type: \"image\",\r\n      url: `${file.secure_url}`,\r\n    };\r\n\r\n    //up ảnh lấy id\r\n\r\n    let aw = await axios.post(`http://localhost:4333/product/add`, image).then(\r\n      (res) => {\r\n        console.log(\"Post Image success\");\r\n        setState({\r\n          ...state,\r\n          list: [...state.list, ...e.target.files],\r\n          path: [...state.path, `${file.secure_url}`],\r\n          listImage: [...state.listImage, `${res.data.image}`],\r\n          userID: 12,\r\n        });\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }; // post product\r\n\r\n  // post\r\n  const upProduct = async () => {\r\n    await axios.post(`http://localhost:4333/product/adds`, inputs).then(\r\n      (res) => {\r\n        console.log(\"Post product success\");\r\n        setState({\r\n          ...state,\r\n          productID: [...state.productID, res.data.product],\r\n        });\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  };\r\n\r\n  const connectImgToProduct = () => {\r\n    if (state.productID.length > 0) {\r\n      state.listImage.forEach((element, index) => {\r\n        console.log(element);\r\n        let connect = {\r\n          image_id: parseInt(element),\r\n          product_image: state.productID,\r\n          main_image: index === 0 ? 1 : 0,\r\n        };\r\n        console.log(connect);\r\n        axios.post(`http://localhost:4333/product/connect`, connect).then(\r\n          (res) => {\r\n            console.log(\"data post connect img to product success\");\r\n            console.log(res);\r\n          },\r\n          (err) => {\r\n            console.log(err);\r\n          }\r\n        );\r\n      });\r\n    }\r\n  };\r\n  const updateProduct = async () => {\r\n    alert(\"cập nhập\");\r\n    axios.put(`http://localhost:4333/product/update/${inputs.id}`, inputs).then(\r\n      (res) => {\r\n        console.log(\"Update success !\");\r\n        history.push(\"/admin/product\");\r\n        dispatch(actions.actLoadProductListRequest());\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setSubmitted(true);\r\n    if (listCarts.numberCart === 0) {\r\n      // product\r\n      upProduct();\r\n      // connect\r\n      connectImgToProduct();\r\n    } else {\r\n      console.log(\"cap nhap\");\r\n      updateProduct();\r\n\r\n      //\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"checkout up-img\">\r\n      <section>\r\n        <form id=\"form\" className=\"form\" onSubmit={handleSubmit}>\r\n          <div className=\"column about\">\r\n            <h2>Thông tin Sản phẩm</h2>\r\n\r\n            <div className=\"form-control\">\r\n              <label htmlFor=\"name\">NAME</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                value={inputs.name}\r\n                onChange={handleChange}\r\n                placeholder=\"Nhập số name\"\r\n              />\r\n              <small>Error message</small>\r\n            </div>\r\n\r\n            <div className=\"form-control\">\r\n              <label htmlFor=\"quantity_in_stock\">quantity in Stock</label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"quantity_in_stock\"\r\n                value={inputs.quantity_in_stock}\r\n                onChange={handleChange}\r\n                placeholder=\"Nhập địa chỉ chi tiết\"\r\n              />\r\n              <small>Error message</small>\r\n            </div>\r\n\r\n            <div className=\"form-control\">\r\n              <label htmlFor=\"price\">Price</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"price\"\r\n                name=\"price\"\r\n                value={inputs.price}\r\n                onChange={handleChange}\r\n                placeholder=\"Nhập Giá\"\r\n              />\r\n              <small>Error message</small>\r\n            </div>\r\n\r\n            <div className=\"form-control\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"description\"\r\n                name=\"description\"\r\n                value={inputs.description}\r\n                onChange={handleChange}\r\n                placeholder=\"Nhập mô tả\"\r\n              />\r\n              <small>Error message</small>\r\n            </div>\r\n\r\n            <div className=\"form-control\">\r\n              <label htmlFor=\"category_id\">Category ID</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"category_id\"\r\n                name=\"category_id\"\r\n                value={inputs.category_id}\r\n                onChange={handleChange}\r\n                placeholder=\"Nhập Category ID\"\r\n              />\r\n              <small>Error message</small>\r\n            </div>\r\n            <div className=\"form-control\">\r\n              <label htmlFor=\"htx_id\">HTX_ID</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"htx_id\"\r\n                name=\"htx_id\"\r\n                value={inputs.htx_id}\r\n                onChange={handleChange}\r\n                placeholder=\"Nhập Category ID\"\r\n              />\r\n              <small>Error message</small>\r\n            </div>\r\n            <div className=\"form-control\">\r\n              <label htmlFor=\"user_id\">USER_ID</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"user_id\"\r\n                name=\"user_id\"\r\n                value={inputs.user_id}\r\n                onChange={handleChange}\r\n                placeholder=\"Nhập Category ID\"\r\n              />\r\n              <small>Error message</small>\r\n            </div>\r\n            <div className=\"form-control\">\r\n              <label htmlFor=\"isDeleted\">Delete_ID</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"isDeleted\"\r\n                name=\"isDeleted\"\r\n                value={inputs.isDeleted}\r\n                onChange={handleChange}\r\n                placeholder=\"Nhập isDeleted\"\r\n              />\r\n              <small>Error message</small>\r\n            </div>\r\n            <div className=\"form-control\">\r\n              <label htmlFor=\"ID_Product\">ID_Product</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"ID_Product\"\r\n                name=\"ID_Product\"\r\n                value={inputs.ID_Product}\r\n                onChange={handleChange}\r\n                placeholder=\"Nhập ID_Product\"\r\n              />\r\n              <small>Error message</small>\r\n            </div>\r\n            <div className=\"form-control\">\r\n              <label htmlFor=\"id_Image\">ID_IMAGE</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"id_Image\"\r\n                name=\"id_Image\"\r\n                value={inputs.id_Image}\r\n                onChange={handleChange}\r\n                placeholder=\"Nhập Category ID\"\r\n              />\r\n              <small>Error message</small>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"column dividing\">\r\n            <input\r\n              type=\"file\"\r\n              name=\"file\"\r\n              multiple\r\n              placeholder=\"Upload an Image !\"\r\n              onChange={uploadImage}\r\n            />\r\n            <h3>Loadding</h3>\r\n            {loading ? (\r\n              <h3>Loadding ...</h3>\r\n            ) : (\r\n              <img\r\n                src={`${image}`}\r\n                style={{\r\n                  width: \"300px\",\r\n                  height: \"300px\",\r\n                  objectFit: \"cover\",\r\n                }}\r\n                alt={\"test\"}\r\n              />\r\n            )}\r\n            <h3>album</h3>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                maxWidth: \"1250px\",\r\n                margin: \"0 auto\",\r\n                flexWrap: \"wrap\",\r\n              }}\r\n            >\r\n              {state.path\r\n                ? state.path.map((value, key) => {\r\n                    return (\r\n                      <li style={{ padding: \"12px 12px 0 0\" }} key={key}>\r\n                        <img\r\n                          src={value}\r\n                          style={{\r\n                            width: \"300px\",\r\n                            height: \"300px\",\r\n                            objectFit: \"cover\",\r\n                            display: \"block\",\r\n                          }}\r\n                          alt=\"123\"\r\n                        ></img>\r\n                      </li>\r\n                    );\r\n                  })\r\n                : null}\r\n            </div>\r\n          </div>\r\n          <div className=\"column order\">\r\n            <h2>Upload</h2>\r\n\r\n            <button className=\"submit order\" type=\"submit\">\r\n              {listCarts.numberCart === 0 ? \"Đăng sản phẩm\" : \"Sửa sản phẩm\"}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpImages;\r\n","import * as types from \"../../../constants/ActionType\";\r\nimport callAPI from \"./../../../untils/callAPI\";\r\n\r\nexport const IDName = (id) => {\r\n  return {\r\n    type: types.ID,\r\n    id,\r\n  };\r\n};\r\n\r\nexport const getProduct = () => {\r\n  return {\r\n    type: types.GETPRODUCT,\r\n  };\r\n};\r\n\r\n// cart\r\nexport const addProductToCart = (payload) => {\r\n  return {\r\n    type: types.ADD_PRODUCT_TO_CART,\r\n    payload,\r\n  };\r\n};\r\n\r\n\r\nexport const deleteProductInCart = (payload) => {\r\n  return {\r\n    type: types.DELETE_CART,\r\n    payload,\r\n  };\r\n};\r\nexport const getIncrease_Quantity = (payload) => {\r\n  return {\r\n    type: types.INCREASE_QUANTITY,\r\n    payload,\r\n  };\r\n};\r\nexport const getDecrease_Quantity = (payload) => {\r\n  return {\r\n    type: types.DECREASE_QUANTITY,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const getTotal_Price = (payload) => {\r\n  return {\r\n    type: types.TOTAL_PRICE,\r\n    payload,\r\n  };\r\n};\r\n\r\n// end cart\r\nexport const getBill_ID = (bill_id) => {\r\n  return {\r\n    type: types.BILL_ID,\r\n    bill_id,\r\n  };\r\n};\r\nexport const getUSER_ID = (user_id) => {\r\n  return {\r\n    type: types.CART_ID,\r\n    user_id,\r\n  };\r\n};\r\n\r\nexport const getIMG_ID = (img_id) => {\r\n  return {\r\n    type: types.UPIMG_ID,\r\n    img_id,\r\n  };\r\n};\r\n\r\nexport const getPRODUCT_ID = (product_id) => {\r\n  return {\r\n    type: types.UPPRODUCT_ID,\r\n    product_id,\r\n  };\r\n};\r\n\r\n//Load ProductList\r\nexport const actLoadProductListRequest = () => {\r\n  return (dispatch) => {\r\n    return callAPI(`product`, \"GET\", null).then((res) => {\r\n      dispatch(actLoadProductList(res.data));\r\n    });\r\n  };\r\n};\r\n\r\n//load product\r\nexport const actLoadProductList = (dataProduct) => {\r\n  return {\r\n    type: types.LOAD_PRODUCT_LIST,\r\n    dataProduct, //action sẽ nhận lại\r\n  };\r\n};\r\n","import axios from \"axios\";\r\nimport * as Config from \"./../constants/ActionType\";\r\n\r\nexport default function callAPi(endPoint, method, body) {\r\n  return axios({\r\n    method: method,\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `${Config.API_URL}/${endPoint}`,\r\n    data: body,\r\n  });\r\n}\r\n"],"sourceRoot":""}