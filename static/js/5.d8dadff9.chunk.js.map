{"version":3,"sources":["app/components/admin/footer/Footer.js","app/components/admin/header/HeaderAdmin.js","app/_actions/custommer/isDisplayForm/DisplayForm.js","app/components/admin/pages/Category/Product_Item.js","app/components/admin/pages/Category/page/Form/modal.js","app/components/admin/pages/Category/page/Form/Form.js","app/components/admin/pages/Category/Product_Category.js","app/components/admin/pages/Product/Product_Item.js","app/components/admin/pages/Product/page/Form/modal.js","app/components/admin/pages/Product/page/Form/Form.js","app/components/admin/pages/Product/Products.js","app/components/admin/pages/Sale/Sale_Item.js","app/components/admin/pages/Sale/page/Form/modal.js","app/components/admin/pages/Sale/page/Form/Form.js","app/components/admin/pages/Sale/Sale.js","app/components/admin/pages/Comment/Comment_Item.js","app/components/admin/pages/Comment/page/Form/modal.js","app/components/admin/pages/Comment/page/Form/Form.js","app/components/admin/pages/Comment/Comment.js","app/components/admin/pages/Home-admin/HomeAdmin.js","app/_pages/admin-page/admin-default-page/Admin_deafault_page.js"],"names":["Footer","props","HeaderAdmin","history","useHistory","useEffect","localStorage","getItem","className","to","type","class","onClick","removeItem","push","window","setTimeout","location","reload","bind","openForm","closeForm","Product_Item","value","dispatch","useDispatch","register","useForm","style","textAlign","placeholder","name","ref","src","avatar","alt","width","height","id","onDeleteId","onEdit","actions","ModalBackground","styled","posed","div","open","background","applyAtStart","display","closed","applyAtEnd","Modal","opacity","transition","duration","isOpen","children","toggle","useRef","initialPose","pose","Form","useState","product","setProduct","errors","handleSubmit","reset","setValue","isDisplayForm","useSelector","state","isModalOpen","toggleModal","getProductDetail","toggleModal6","onSetLogged","a","axios","get","response","console","log","data","onSubmit","e","put","then","onReload","target","err","JsonData","post","htmlFor","required","color","Product_Category","logged","setlogged","setID","currentpage","setCurrentpage","postperpage","totalPages","setTotalPages","arr","setArr","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","result","isConfirmed","delete","getUser","position","showConfirmButton","timer","indexofFirstPost","indexofLastPost","arrPage","Post","slice","i","Math","ceil","parseInt","length","item","error","onAdd","map","index","aria-label","page","url","objectFit","quantity_in_stock","price","padding","watch","list","path","listImage","productID","setState","success","setSuccess","connectImgToProduct","uploadImage","files","FormData","append","fetch","method","body","res","json","file","image","secure_url","userID","upProduct","forEach","element","connect","image_id","product_image","main_image","shouldDirty","description","category_id","htx_id","user_id","isDeleted","defaultValue","multiple","onChange","key","border","Products","total_price","status","created_at","setList","detail","setDetail","check","setCheck","alert","shipping_name","phone","chitiet","email","product_name","paddingRight","colSpan","Sale","count","setCount","Sale_Item","Comment_Item","txt_comment","product_id","first_name","last_name","users_id","txt_answer","Comment","HomeAdmin","Admin_deafault_page","Suspense","component","Category","extra"],"mappings":"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","file":"static/js/5.d8dadff9.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Footer.scss';\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <footer>\r\n            <h1>Footer</h1>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"./HeaderAdmin.scss\";\r\nfunction HeaderAdmin(props) {\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"token-user\")) {\r\n    }\r\n  }, []);\r\n\r\n  const onLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    history.push(\"/\");\r\n    window.setTimeout(window.location.reload.bind(window.location), 10);\r\n  };\r\n  return (\r\n    <header>\r\n      <div className=\"wrap-main\">\r\n        <nav>\r\n          <li className=\"logo\">\r\n            <Link to=\"/admin\">LaptopTHAV</Link>\r\n          </li>\r\n          <div className=\"menu-info\">\r\n            <div className=\"menu-right\">\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn\"\r\n                onClick={() => onLogout()}\r\n              >\r\n                Logout\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n      <div className=\"clr\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default HeaderAdmin;\r\n","import *as type from './../../../_constants/ActionType';\r\nexport const toggleForm = () =>{\r\n    return {\r\n        type : type.TOGGLE_FORM,\r\n    }\r\n  }\r\n  export const openForm = () =>{\r\n    return {\r\n        type : type.OPEN_FORM,\r\n    }\r\n  }\r\n  export const closeForm = () =>{\r\n    return {\r\n        type : type.CLOSE_FORM,\r\n    }\r\n  }","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as actions from \"../../../../_actions/custommer/isDisplayForm/DisplayForm\";\r\nfunction Product_Item(props) {\r\n    let { value } = props;\r\n    const dispatch = useDispatch();\r\n      const { register } = useForm();\r\n    const onDelete = (id) => {\r\n        props.onDeleteId(id);\r\n    }\r\n    const onEdit = (id) => {\r\n        let value = true;\r\n        props.onEdit(id, value);\r\n        dispatch(actions.openForm());\r\n    }\r\n    return (\r\n      <tr>\r\n        <td style={{ textAlign: \"center\" }}>\r\n          <input\r\n            type=\"checkbox\"\r\n            placeholder=\"Deleted\"\r\n            name=\"Deleted\"\r\n            ref={register}\r\n          />\r\n        </td>\r\n        <td>{value.name}</td>\r\n        <td>\r\n          <img\r\n            src={value.avatar}\r\n            alt=\"Mountain\"\r\n            width=\"100px\"\r\n            height=\"100px\"\r\n          ></img>\r\n        </td>\r\n        <td>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => onDelete(value.id)}\r\n            class=\"btn btn-danger\"\r\n          >\r\n            xóa\r\n          </button>\r\n          &nbsp;\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => onEdit(value.id)}\r\n            class=\"btn btn-warning\"\r\n          >\r\n            Sửa\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n}\r\n\r\nexport default Product_Item;","import React, { useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport posed from \"react-pose\";\r\n\r\nfunction useOnClickOutside(ref, handler) {\r\n  useEffect(() => {\r\n    const listener = event => {\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return;\r\n      }\r\n\r\n      handler(event);\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", listener);\r\n    document.addEventListener(\"touchstart\", listener);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", listener);\r\n      document.removeEventListener(\"touchstart\", listener);\r\n    };\r\n  }, []); // Empty array ensures that effect is only run on mount and unmount\r\n}\r\n\r\nconst modalBackgroundPoses = {\r\n  open: {\r\n    background: \"rgba(0, 0, 0, 0.2)\",\r\n    applyAtStart: {\r\n      display: \"block\"\r\n    }\r\n  },\r\n  closed: {\r\n    background: \"rgba(0, 0, 0, 0)\",\r\n    applyAtEnd: {\r\n      display: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst ModalBackground = styled(posed.div(modalBackgroundPoses))`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: red;\r\n`;\r\n\r\nconst modalPoses = {\r\n  open: {\r\n    opacity: 1,\r\n    transition: {\r\n      opacity: {\r\n        type: \"tween\",\r\n        duration: 200\r\n      }\r\n    }\r\n  },\r\n  closed: {\r\n    opacity: 0,\r\n    transition: {\r\n      opacity: {\r\n        type: \"tween\",\r\n        duration: 200\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst Modal = styled(posed.div(modalPoses))`\r\n  position: relative;\r\n  background: white;\r\n  width: 80%;\r\n  height: auto;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n  box-shadow: 0 2px 4px 0 rgba(50, 50, 93, 0.1);\r\n`;\r\n\r\nexport default function({ isOpen, toggle, children }) {\r\n  const ref = useRef();\r\n  return (\r\n    <ModalBackground initialPose=\"closed\" pose={isOpen ? \"open\" : \"closed\"}>\r\n      <Modal ref={ref}>{children}</Modal>\r\n    </ModalBackground>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Modal from \"./modal\";\r\nimport * as actions from \"../../../../../../_actions/custommer/isDisplayForm/DisplayForm\";\r\nimport axios from \"axios\";\r\nimport { useForm } from \"react-hook-form\";\r\nfunction Form(props) {\r\n    let { id } = props;\r\n    const [product, setProduct] = useState({});\r\n    const { register, errors, reset, setValue, handleSubmit } = useForm();\r\n    const isDisplayForm = useSelector((state) => state.isDisplayForm);\r\n    const [isModalOpen, toggleModal] = useState(isDisplayForm);\r\n    const dispatch = useDispatch();\r\n    //useEffect\r\n    useEffect(() => {\r\n        getProductDetail();\r\n\r\n    }, []);\r\n    const toggleModal5 = () => {\r\n        toggleModal(true);\r\n    };\r\n    const toggleModal6 = () => {\r\n        toggleModal(false);\r\n        props.onSetLogged();\r\n        dispatch(actions.closeForm());\r\n    };\r\n    async function getProductDetail() {\r\n        if (id) {\r\n            const response = await axios.get(\r\n              `http://localhost:4333/product/details/${id}`\r\n            );\r\n            console.log(response);\r\n            // setValue('name', response.data.name, { shouldDirty: true });// set vào form\r\n            setProduct(response.data);\r\n        }\r\n\r\n    }\r\n    const onSubmit = (data, e) => {\r\n        if (id !== null) {\r\n            product.name = data.name;\r\n            axios.put(`https://5fec7ae2595e420017c2be4d.mockapi.io/productjs/${id}`, product).then((data) => {\r\n                toggleModal6();\r\n                props.onReload(\"cập nhật thành công\");\r\n                e.target.reset(); // set form input trở thái bình thường\r\n            }, (err) => {\r\n                console.log(err);\r\n            });\r\n        } else {\r\n            /// tự viết\r\n            let JsonData = {\r\n                \"createdAt\": \"2021-02-02T20:05:38.450Z\",\r\n                \"name\": data.name,\r\n                \"avatar\": \"https://s3.amazonaws.com/uifaces/faces/twitter/megdraws/128.jpg\"\r\n            }\r\n            axios.post(`https://5fec7ae2595e420017c2be4d.mockapi.io/productjs`, JsonData).then((data) => {\r\n                toggleModal6();\r\n                props.onReload(\"Thêm thành công\");\r\n                e.target.reset();\r\n            }, (err) => {\r\n                console.log(err);\r\n            });\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div className=\"Apps\">\r\n            <Modal isOpen={isModalOpen} toggle={toggleModal}>\r\n                {id ? <h3>Sửa sản phẩm</h3> : <h3>Thêm sản phẩm</h3>}\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"exampleInputEmail1\">Name</label>\r\n                            <input type=\"text\" className=\"form-control\" name=\"name\" ref={register({ required: true })} />\r\n                            <small id=\"emailHelp\" style={{ color: \"red\" }}>\r\n                                {errors.name && \"Vui lòng nhập giá trị Name\"}\r\n                            </small>\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Lưu lại</button>\r\n                        &nbsp;\r\n                        <button type=\"button\" onClick={() => toggleModal6()} className=\"btn btn-default\">Đóng</button>\r\n                    </div>\r\n                </form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Form;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from \"axios\";\r\nimport Swal from 'sweetalert2'\r\nimport \"../scss/pageAdmin.scss\";\r\nimport Product_Item from './Product_Item';\r\nimport Form from './page/Form/Form';\r\nimport * as actions from \"../../../../_actions/custommer/isDisplayForm/DisplayForm\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { useForm } from \"react-hook-form\";\r\nfunction Product_Category(props) {\r\n    const dispatch = useDispatch();\r\n    const { register } = useForm();\r\n    // hiển thị khi true\r\n    const [logged, setlogged] = useState(false);\r\n    const [id, setID] = useState(\"\");\r\n\r\n    // phân trang\r\n    //biến currentpage này như số trang...1 là trang 1, 2 là trang 2, 3 là trang 3\r\n    const [currentpage, setCurrentpage] = useState(1);\r\n    // biến postperpage này như size dị...\r\n    //ví dụ danh sách 10 phần tử cho nó là 2 thì hiển thị danh sách 2 còn 8 phần tử kia phần trang ra 1,2,3,4,5 \r\n    //gồm 5 trang hỏng tin thử đi\r\n    const [postperpage, setPostperpage] = useState(5);\r\n    // biến totalPages này để set mảng chứa số trang bị cắt\r\n    const [totalPages, setTotalPages] = useState([]);\r\n    const [arr, setArr] = useState([]);\r\n\r\n\r\n    //useEffect\r\n    useEffect(() => {\r\n        getUser();\r\n        if (currentpage) {\r\n            getUser();\r\n        }\r\n    }, [currentpage]);\r\n    async function onDeleteId(id) {\r\n        Swal.fire({\r\n            title: 'Bạn có muốn xóa không?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Đồng ý',\r\n            cancelButtonText: 'Hủy'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                axios.delete(`https://5fec7ae2595e420017c2be4d.mockapi.io/productjs/${id}`).then((data) => {\r\n                    getUser();\r\n                    Swal.fire({\r\n                        position: 'top-end',\r\n                        icon: 'success',\r\n                        title: 'Xóa thành công',\r\n                        showConfirmButton: false,\r\n                        timer: 1500\r\n                    })\r\n                }, (err) => {\r\n                    console.log(\"lỗi\");\r\n                })\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n    const onEdit = (id, value) => {\r\n        setlogged(true);\r\n        setID(id);\r\n    }\r\n    const onSetLogged = () => {\r\n        setlogged(false);\r\n    }\r\n    const onReloadPage = (name) => {\r\n        getUser();\r\n        setlogged(false);\r\n        Swal.fire({\r\n            position: 'top-end',\r\n            icon: 'success',\r\n            title: name,\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n        })\r\n    }\r\n    //viets một hàm onAdd\r\n    const onAdd = (id) => {\r\n        setID(id);\r\n        setlogged(true);\r\n        dispatch(actions.openForm());\r\n    }\r\n    const onAddPage = (page) => {\r\n        setTimeout(function () {\r\n            setCurrentpage(page);\r\n        }, 1000);\r\n    }\r\n    async function getUser() {\r\n        //khai báo phần tử cuối\r\n        const indexofLastPost = currentpage * postperpage;\r\n          //khai báo phần tử đầu\r\n        const indexofFirstPost = indexofLastPost - postperpage;\r\n        try {\r\n            let arrPage = [];\r\n            const response = await axios.get('https://5fec7ae2595e420017c2be4d.mockapi.io/productjs');\r\n            // cắt danh sách mảng bằng slice phần tử đầu phần tử cuối\r\n            const Post = response.data.slice(indexofFirstPost, indexofLastPost);\r\n            setArr(Post);\r\n            //này e mấy e tính số trang page để hiển thị ra cho người dùng\r\n            // Math.ceil là mấy e lấy 5/2 =2.5 thì mình lấy 3 dị đó\r\n            // response.data.length só phần tử của mảng danh sách lấy về chia cho số phần mình cần hiển thị ra giao diện\r\n            for (let i = 1; i <= Math.ceil(parseInt(response.data.length) / postperpage); i++) {\r\n                arrPage.push({ item: i });\r\n            }\r\n            // rảnh log mảng arrPage ra xem...\r\n            setTotalPages(arrPage);\r\n            //setTotalPages là cái mảng bị cắt rồi đó a e.....\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n    return (\r\n      <div className=\"body-cate\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-primary mt-16 larger\"\r\n          onClick={() => onAdd(null)}\r\n        >\r\n          Thêm mới một sản phẩm\r\n        </button>\r\n        {logged === true ? (\r\n          <Form\r\n            id={id}\r\n            onReload={onReloadPage}\r\n            onSetLogged={onSetLogged}\r\n          ></Form>\r\n        ) : null}\r\n        <table class=\"table table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n                {\" \"}\r\n                <input\r\n                  type=\"checkbox\"\r\n                  placeholder=\"Deleted\"\r\n                  name=\"Deleted\"\r\n                  ref={register}\r\n                />\r\n              </th>\r\n              <th>Tên</th>\r\n              <th>Ảnh</th>\r\n              <th>Sửa thông tin</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {arr.length > 0\r\n              ? arr.map((value, index) => {\r\n                  return (\r\n                    <Product_Item\r\n                      value={value}\r\n                      index={index}\r\n                      key={index}\r\n                      onDeleteId={onDeleteId}\r\n                      onEdit={onEdit}\r\n                    />\r\n                  );\r\n                })\r\n              : null}\r\n          </tbody>\r\n        </table>\r\n\r\n        <nav aria-label=\"Page navigation example\">\r\n          {totalPages.map.length > 0\r\n            ? totalPages.map((value, index) => {\r\n                return (\r\n                  <ul className=\"pagination\" key={index}>\r\n                    <li\r\n                      onClick={() => onAddPage(value.item)}\r\n                      className=\"page-item\"\r\n                    >\r\n                      <span className=\"page-link-ad\">{value.item}</span>\r\n                    </li>\r\n                  </ul>\r\n                );\r\n              })\r\n            : null}\r\n        </nav>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Product_Category;","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as actions from \"./../../../../_actions/custommer/isDisplayForm/DisplayForm\";\r\nfunction Product_Item(props) {\r\n  let { value } = props;\r\n  console.log(value);\r\n  const dispatch = useDispatch();\r\n  const { register } = useForm();\r\n  const onDelete = (id) => {\r\n    props.onDeleteId(id);\r\n  };\r\n  const onEdit = (id) => {\r\n    let value = true;\r\n    props.onEdit(id, value);\r\n    dispatch(actions.openForm());\r\n  };\r\n  return (\r\n    <tr>\r\n      <td style={{ textAlign: \"center\" }}>\r\n        <input\r\n          type=\"checkbox\"\r\n          placeholder=\"Deleted\"\r\n          name=\"Deleted\"\r\n          ref={register}\r\n        />\r\n      </td>\r\n      <td className=\"name\">\r\n        <img\r\n          src={value.url}\r\n          alt=\"Mountain\"\r\n          width=\"80px\"\r\n          height=\"80px\"\r\n          style={{ objectFit: \"contain\" }}\r\n        ></img>\r\n        <div className=\"product-name\">\r\n          <p>{value.name}</p>\r\n        </div>\r\n    \r\n      </td>\r\n      \r\n      <td>x{value.quantity_in_stock}</td>\r\n      <td>{value.price}</td>\r\n      \r\n      <td>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => onDelete(value.id)}\r\n          class=\"btn btn-danger\"\r\n          style={{ padding: \"5px 10px\" }}\r\n        >\r\n          Xóa\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => onEdit(value.id)}\r\n          class=\"btn btn-primary\"\r\n          style={{ padding: \"5px 10px\" }}\r\n        >\r\n          Sửa\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default Product_Item;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport posed from \"react-pose\";\r\n\r\nfunction useOnClickOutside(ref, handler) {\r\n  useEffect(() => {\r\n    const listener = event => {\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return;\r\n      }\r\n\r\n      handler(event);\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", listener);\r\n    document.addEventListener(\"touchstart\", listener);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", listener);\r\n      document.removeEventListener(\"touchstart\", listener);\r\n    };\r\n  }, []); // Empty array ensures that effect is only run on mount and unmount\r\n}\r\n\r\nconst modalBackgroundPoses = {\r\n  open: {\r\n    background: \"rgba(0, 0, 0, 0.2)\",\r\n    applyAtStart: {\r\n      display: \"block\"\r\n    }\r\n  },\r\n  closed: {\r\n    background: \"rgba(0, 0, 0, 0)\",\r\n    applyAtEnd: {\r\n      display: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst ModalBackground = styled(posed.div(modalBackgroundPoses))`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: red;\r\n`;\r\n\r\nconst modalPoses = {\r\n  open: {\r\n    opacity: 1,\r\n    transition: {\r\n      opacity: {\r\n        type: \"tween\",\r\n        duration: 200\r\n      }\r\n    }\r\n  },\r\n  closed: {\r\n    opacity: 0,\r\n    transition: {\r\n      opacity: {\r\n        type: \"tween\",\r\n        duration: 200\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst Modal = styled(posed.div(modalPoses))`\r\n  position: relative;\r\n  background: white;\r\n  width: 80%;\r\n  height: auto;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n  box-shadow: 0 2px 4px 0 rgba(50, 50, 93, 0.1);\r\n`;\r\n\r\nexport default function({ isOpen, toggle, children }) {\r\n  const ref = useRef();\r\n  return (\r\n    <ModalBackground initialPose=\"closed\" pose={isOpen ? \"open\" : \"closed\"}>\r\n      <Modal ref={ref}>{children}</Modal>\r\n    </ModalBackground>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Modal from \"./modal\";\r\nimport * as actions from \"./../../../../../../_actions/custommer/isDisplayForm/DisplayForm\";\r\nimport axios from \"axios\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"./Form.scss\";\r\n\r\nfunction Form(props) {\r\n  let { id } = props;\r\n  const [product, setProduct] = useState({});\r\n  const { register, errors, reset, setValue, handleSubmit, watch } = useForm();\r\n  const isDisplayForm = useSelector((state) => state.isDisplayForm);\r\n  const [isModalOpen, toggleModal] = useState(isDisplayForm);\r\n  const [state, setState] = useState({\r\n    list: [],\r\n    path: [],\r\n    listImage: [],\r\n    productID: [],\r\n  });\r\n\r\n  const [success, setSuccess] = useState(false);\r\n  const dispatch = useDispatch();\r\n  //useEffect\r\n  useEffect(() => {\r\n    //\r\n    if (id === null) {\r\n      connectImgToProduct();\r\n    }\r\n    // sửa.\r\n    if (id && state.productID.length === 0) {\r\n      getProductDetail();\r\n    }\r\n    //\r\n    connectImgToProduct();\r\n  }, [state.productID, success]);\r\n\r\n  const toggleModal5 = () => {\r\n    toggleModal(true);\r\n  };\r\n  const toggleModal6 = () => {\r\n    toggleModal(false);\r\n    props.onSetLogged();\r\n    dispatch(actions.closeForm());\r\n  };\r\n\r\n  // thêm mới.\r\n  const uploadImage = async (e) => {\r\n    const files = e.target.files;\r\n    const data = new FormData();\r\n    data.append(\"file\", files[0]);\r\n    data.append(\"upload_preset\", \"laptop\");\r\n    const res = await fetch(\r\n      \"https://api.cloudinary.com/v1_1/cv-thav-herokuapp-com/image/upload\",\r\n      {\r\n        method: \"POST\",\r\n        body: data,\r\n      }\r\n    );\r\n\r\n    const file = await res.json();\r\n    let image = {\r\n      type: \"image\",\r\n      url: `${file.secure_url}`,\r\n    };\r\n\r\n    //up ảnh lấy id\r\n\r\n    let aw = await axios.post(`http://localhost:4333/product/add`, image).then(\r\n      (res) => {\r\n        console.log(\"Post Image success\");\r\n        if (id) {\r\n          setState({\r\n            ...state,\r\n            productID: [...state.productID, id],\r\n            list: [...state.list, ...e.target.files],\r\n            path: [...state.path, `${file.secure_url}`],\r\n            listImage: [...state.listImage, `${res.data.image}`],\r\n            userID: 12,\r\n          });\r\n        } else {\r\n          setState({\r\n            ...state,\r\n            list: [...state.list, ...e.target.files],\r\n            path: [...state.path, `${file.secure_url}`],\r\n            listImage: [...state.listImage, `${res.data.image}`],\r\n            userID: 12,\r\n          });\r\n        }\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  };\r\n\r\n  // post product\r\n  const upProduct = async (data) => {\r\n    await axios.post(`http://localhost:4333/product/adds`, data).then(\r\n      (res) => {\r\n        console.log(\"Post product success\");\r\n        setState({\r\n          ...state,\r\n          productID: [...state.productID, res.data.product],\r\n        });\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  };\r\n  // connect\r\n  const connectImgToProduct = () => {\r\n    if (state.productID.length > 0) {\r\n      state.listImage.forEach((element, index) => {\r\n        let connect = {\r\n          image_id: parseInt(element),\r\n          product_image: id ? id : state.productID,\r\n          main_image: index === 0 ? (id ? 0 : 1) : 0,\r\n        };\r\n        axios.post(`http://localhost:4333/product/connect`, connect).then(\r\n          (res) => {\r\n            console.log(\"data post connect img to product success\");\r\n          },\r\n          (err) => {\r\n            console.log(err);\r\n          }\r\n        );\r\n      });\r\n    }\r\n  };\r\n  // end connect\r\n\r\n  // end thêm mới.\r\n  // sửa\r\n  // 1. load dữ liệu ra form.\r\n  async function getProductDetail() {\r\n    if (id) {\r\n      const response = await axios.get(`http://localhost:4333/product/${id}`);\r\n      // [\r\n      //   { name: \"name\", value: \"name\" },\r\n      //   { name: \"quantity_in_stock\", value: \"1\" },\r\n      //   { name: \"price\", value: \"123\" },\r\n      // ].forEach(({ name, value }) => setValue(name, value));\r\n\r\n      setValue(\"name\", response.data.result[0].name, { shouldDirty: true });\r\n      setValue(\"quantity_in_stock\", response.data.result[0].quantity_in_stock, {\r\n        shouldDirty: true,\r\n      });\r\n      setValue(\"price\", response.data.result[0].price, { shouldDirty: true });\r\n      setValue(\"description\", response.data.result[0].description, {\r\n        shouldDirty: true,\r\n      });\r\n      setValue(\"category_id\", response.data.result[0].category_id, {\r\n        shouldDirty: true,\r\n      });\r\n      setValue(\"htx_id\", response.data.result[0].htx_id, { shouldDirty: true });\r\n      setValue(\"user_id\", response.data.result[0].user_id, {\r\n        shouldDirty: true,\r\n      });\r\n      setValue(\"isDeleted\", response.data.result[0].isDeleted, {\r\n        shouldDirty: true,\r\n      });\r\n      setState({\r\n        ...state,\r\n        path: response.data.result,\r\n      });\r\n      setProduct(response.data);\r\n    }\r\n  }\r\n  // 2. Cập nhập dữ liệu vừa nhập\r\n  const onSubmit = (data, e) => {\r\n    // sửa sản phẩm.\r\n    if (id !== null) {\r\n      product.name = data.name;\r\n      axios.put(`http://localhost:4333/product/update/${id}`, data).then(\r\n        (data) => {\r\n          setTimeout(function () {\r\n            toggleModal6();\r\n            props.onReload(\"Sửa sản phẩm thành công.\");\r\n            e.target.reset(); // set form input trở lại trạng thái bình thường\r\n          }, 200);\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n    } else {\r\n      /// tự viết\r\n      // thêm mới sản phẩm.\r\n      // connect\r\n      upProduct(data);\r\n\r\n      if (id) {\r\n        setSuccess(true);\r\n      }\r\n      setTimeout(function () {\r\n        connectImgToProduct();\r\n        toggleModal6();\r\n        props.onReload(\"Thêm sản phẩm thành công.\");\r\n        e.target.reset(); // set form input trở lại trạng thái bình thường\r\n      }, 200);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"Apps\">\r\n      <Modal isOpen={isModalOpen} toggle={toggleModal}>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div className=\"forms form-container\">\r\n            <div className=\"form-left\">\r\n              <h3>Thông tin cơ bản</h3>\r\n\r\n              {/* Tên */}\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputEmail1\">Tên sản phẩm name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  className=\"form-control\"\r\n                  ref={register({ required: true })}\r\n                />\r\n                <small id=\"emailHelp\" style={{ color: \"red\" }}>\r\n                  {errors.name && \"Vui lòng nhập giá trị Name\"}\r\n                </small>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputEmail1\">Số lượng - quantity</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"quantity_in_stock\"\r\n                  className=\"form-control\"\r\n                  ref={register({ required: true })}\r\n                />\r\n                <small id=\"emailHelp\" style={{ color: \"red\" }}>\r\n                  {errors.name && \"Vui lòng nhập giá trị Mô tả.\"}\r\n                </small>\r\n              </div>\r\n              {/* Mô tả */}\r\n              <div className=\"form-group description\">\r\n                <label htmlFor=\"exampleInputEmail1\">\r\n                  Mô tả sản phẩm - descriptiton\r\n                </label>\r\n                <textarea\r\n                  type=\"text\"\r\n                  name=\"description\"\r\n                  className=\"form-control\"\r\n                  ref={register({ required: true })}\r\n                />\r\n                <small id=\"emailHelp\" style={{ color: \"red\" }}>\r\n                  {errors.name && \"Vui lòng nhập giá trị Mô tả.\"}\r\n                </small>\r\n              </div>\r\n              {/* Thương hiệu */}\r\n              {/* <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputEmail1\">Thương hiệu</label>\r\n                <input\r\n                  type=\"text\"\r\n                 \r\n                  className=\"form-control\"\r\n                  \r\n                />\r\n                <small id=\"emailHelp\" style={{ color: \"red\" }}>\r\n                  {errors.name && \"Vui lòng nhập thương hiệu.\"}\r\n                </small>\r\n              </div> */}\r\n              {/* Bảo hành */}\r\n              {/* <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputEmail1\">Bảo hành</label>\r\n                <input\r\n                  type=\"text\"\r\n                  \r\n                  className=\"form-control\"\r\n                  \r\n                />\r\n                <small id=\"emailHelp\" style={{ color: \"red\" }}>\r\n                  {errors.name && \"Vui lòng nhập giá trị GIÁ.\"}\r\n                </small>\r\n              </div> */}\r\n\r\n              <h3>Thông tin bán hàng</h3>\r\n              {/* Giá bán */}\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputEmail1\">Giá bán - price</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"price\"\r\n                  className=\"form-control\"\r\n                  ref={register({ required: true })}\r\n                />\r\n                <small id=\"emailHelp\" style={{ color: \"red\" }}>\r\n                  {errors.name && \"Vui lòng nhập giá trị Category_id\"}\r\n                </small>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputEmail1\">Category-id</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"category_id\"\r\n                  className=\"form-control\"\r\n                  defaultValue=\"5\"\r\n                  ref={register({ required: true })}\r\n                />\r\n                <small id=\"emailHelp\" style={{ color: \"red\" }}>\r\n                  {errors.name && \"Vui lòng nhập giá trị HTX_id\"}\r\n                </small>\r\n              </div>\r\n              {/* Kho hàng */}\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputEmail1\">Kho hàng</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"htx_id\"\r\n                  className=\"form-control\"\r\n                  defaultValue=\"8\"\r\n                  ref={register({ required: true })}\r\n                />\r\n                <small id=\"emailHelp\" style={{ color: \"red\" }}>\r\n                  {errors.name && \"Vui lòng nhập giá trị HTX_id\"}\r\n                </small>\r\n              </div>\r\n              {/* Phân loại hàng */}\r\n              {/* <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputEmail1\">Phân loại</label>\r\n                <input\r\n                  type=\"number\"\r\n                  defaultValue=\"8\"\r\n                  ref={register({ required: true })}\r\n                />\r\n                <small id=\"emailHelp\" style={{ color: \"red\" }}>\r\n                  {errors.name && \"Vui lòng nhập giá trị HTX_id\"}\r\n                </small>\r\n              </div> */}\r\n\r\n              {/* Quản lý hình ảnh */}\r\n              {/* input img */}\r\n              <h3>Quản lý hình ảnh</h3>\r\n              <div className=\"form-group edit\">\r\n                <label htmlFor=\"exampleInputEmail1\">Hình ảnh sản phẩm</label>\r\n                <div className=\"edit-img\">\r\n                  <input\r\n                    id=\"upfile\"\r\n                    name=\"file\"\r\n                    type=\"file\"\r\n                    multiple\r\n                    placeholder=\"Upload an Image !\"\r\n                    onChange={uploadImage}\r\n                    ref={register({ required: true })}\r\n                  />\r\n                  <div className=\"input-img\">\r\n                    {state.path\r\n                      ? state.path.map((value, key) => {\r\n                          return (\r\n                            <li key={key}>\r\n                              <img\r\n                                src={\r\n                                  id ? value.url : value\r\n                                }\r\n                                style={\r\n                                  id\r\n                                    ? { border: \"1px solid rgba(0,0,0,.2)\" }\r\n                                    : { border: \"1px dashed #1791f2\" }\r\n                                }\r\n                                alt=\"123\"\r\n                              ></img>\r\n                              <p>\r\n                                {key === 0 ? \"Ảnh bìa\" : \"Hình \" + `${key}`}\r\n                              </p>\r\n                            </li>\r\n                          );\r\n                        })\r\n                      : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* input img */}\r\n              {/* Hết quản lý hình ảnh */}\r\n\r\n              <h3>Vận chuyển</h3>\r\n              {/* Cân nặng */}\r\n              {/* Kích thước */}\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputEmail1\">Cân nặng</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"user_id\"\r\n                  className=\"form-control\"\r\n                  defaultValue=\"33\"\r\n                  ref={register({ required: true })}\r\n                />\r\n                <small id=\"emailHelp\" style={{ color: \"red\" }}>\r\n                  {errors.name && \"Vui lòng nhập giá trị USER_id\"}\r\n                </small>\r\n              </div>\r\n\r\n              {/* <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputEmail1\">Kích thước</label>\r\n                <input\r\n                  type=\"number\"\r\n                  \r\n                  className=\"form-control\"\r\n                  defaultValue=\"1\"\r\n                  \r\n                />\r\n                <small id=\"emailHelp\" style={{ color: \"red\" }}>\r\n                  {errors.name && \"Vui lòng nhập giá trị isDelete\"}\r\n                </small>\r\n              </div> */}\r\n\r\n              {/* THông tin khác */}\r\n              <h3>Thông tin khác</h3>\r\n              {/* <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputEmail1\">Hàng đặt trước</label>\r\n                <input\r\n                  type=\"number\"\r\n                \r\n                  className=\"form-control\"\r\n                  defaultValue=\"1\"\r\n                 \r\n                />\r\n                <small id=\"emailHelp\" style={{ color: \"red\" }}>\r\n                  {errors.name && \"Vui lòng nhập giá trị isDelete\"}\r\n                </small>\r\n              </div> */}\r\n              {/* <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputEmail1\">Tình trạng</label>\r\n                <input\r\n                  type=\"number\"\r\n                 \r\n                  className=\"form-control\"\r\n                 \r\n                />\r\n                <small id=\"emailHelp\" style={{ color: \"red\" }}>\r\n                  {errors.name && \"Vui lòng nhập giá trị isDelete\"}\r\n                </small>\r\n              </div> */}\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputEmail1\">SKU Phân loại</label>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"isDeleted\"\r\n                  className=\"form-control\"\r\n                  defaultValue=\"1\"\r\n                  ref={register({ required: true })}\r\n                />\r\n                <small id=\"emailHelp\" style={{ color: \"red\" }}>\r\n                  {errors.name && \"Vui lòng nhập giá trị isDelete\"}\r\n                </small>\r\n              </div>\r\n\r\n              <div className=\"btn-group\">\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                  {id ? \"Sửa sản phẩm\" : \"Thêm mới\"}\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => toggleModal6()}\r\n                  className=\"btn btn-default\"\r\n                >\r\n                  Đóng\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-right\">\r\n              <li>Thông tin sản phẩm</li>\r\n              <li>Thông tin bán hàng</li>\r\n              <li>Quản lý hình ảnh</li>\r\n              <li>Vận chuyển</li>\r\n              <li>Thông tin khác</li>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport \"../scss/pageAdmin.scss\";\r\nimport \"./Products.scss\";\r\nimport Product_Item from \"./Product_Item\";\r\nimport Form from \"./page/Form/Form\";\r\nimport * as actions from \"../../../../_actions/custommer/isDisplayForm/DisplayForm\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nfunction Products(props) {\r\n  const dispatch = useDispatch();\r\n  // hiển thị khi true\r\n  const [logged, setlogged] = useState(false);\r\n  const [id, setID] = useState(\"\");\r\n  const { register } = useForm();\r\n  // phân trang\r\n  //biến currentpage này như số trang...1 là trang 1, 2 là trang 2, 3 là trang 3\r\n  const [currentpage, setCurrentpage] = useState(1);\r\n  // biến postperpage này như size dị...\r\n  //ví dụ danh sách 10 phần tử cho nó là 2 thì hiển thị danh sách 2 còn 8 phần tử kia phần trang ra 1,2,3,4,5\r\n  //gồm 5 trang hỏng tin thử đi\r\n  const [postperpage, setPostperpage] = useState(5);\r\n  // biến totalPages này để set mảng chứa số trang bị cắt\r\n  const [totalPages, setTotalPages] = useState([]);\r\n  const [arr, setArr] = useState([]);\r\n\r\n  //useEffect\r\n  useEffect(() => {\r\n    getUser();\r\n    if (currentpage) {\r\n      getUser();\r\n    }\r\n  }, [currentpage]);\r\n\r\n  // xóa\r\n  async function onDeleteId(id) {\r\n    Swal.fire({\r\n      title: \"Bạn có muốn xóa không?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Đồng ý\",\r\n      cancelButtonText: \"Hủy\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        axios.delete(`http://localhost:4333/product/av/${id}`).then(\r\n          (data) => {\r\n            getUser();\r\n            Swal.fire({\r\n              position: \"top-end\",\r\n              icon: \"success\",\r\n              title: \"Xóa thành công\",\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            });\r\n          },\r\n          (err) => {\r\n            console.log(\"lỗi\");\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n  // sửa\r\n  const onEdit = (id, value) => {\r\n    setlogged(true);\r\n    setID(id);\r\n  };\r\n  const onSetLogged = () => {\r\n    setlogged(false);\r\n  };\r\n  const onReloadPage = (name) => {\r\n    getUser();\r\n    setlogged(false);\r\n    Swal.fire({\r\n      position: \"top-end\",\r\n      icon: \"success\",\r\n      title: name,\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    });\r\n  };\r\n  //viets một hàm onAdd\r\n  const onAdd = (id) => {\r\n    setID(id);\r\n    setlogged(true);\r\n    dispatch(actions.openForm());\r\n  };\r\n  const onAddPage = (page) => {\r\n    setTimeout(function () {\r\n      setCurrentpage(page);\r\n    }, 1000);\r\n  };\r\n  async function getUser() {\r\n    //khai báo phần tử cuối\r\n    const indexofLastPost = currentpage * postperpage;\r\n    //khai báo phần tử đầu\r\n    const indexofFirstPost = indexofLastPost - postperpage;\r\n    try {\r\n      let arrPage = [];\r\n      const response = await axios.get(\"http://localhost:4333/product\");\r\n      console.log(response);\r\n      console.log(response.data.result);\r\n      // cắt danh sách mảng bằng slice phần tử đầu phần tử cuối\r\n      const Post = response.data.result.slice(\r\n        indexofFirstPost,\r\n        indexofLastPost\r\n      );\r\n      setArr(Post);\r\n      //này e mấy e tính số trang page để hiển thị ra cho người dùng\r\n      // Math.ceil là mấy e lấy 5/2 =2.5 thì mình lấy 3 dị đó\r\n      // response.data.length só phần tử của mảng danh sách lấy về chia cho số phần mình cần hiển thị ra giao diện\r\n      for (\r\n        let i = 1;\r\n        i <= Math.ceil(parseInt(response.data.result.length) / postperpage);\r\n        i++\r\n      ) {\r\n        arrPage.push({ item: i });\r\n      }\r\n      // rảnh log mảng arrPage ra xem...\r\n      setTotalPages(arrPage);\r\n      //setTotalPages là cái mảng bị cắt rồi đó a e.....\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"body-cate\">\r\n      <nav>\r\n        <Link to={\"/admin/all\"}>Tất Cả</Link>\r\n        <Link to={\"/admin/all\"}>Đang hoạt động</Link>\r\n        <Link to={\"/admin/all\"}>Hết Hàng</Link>\r\n        <Link to={\"/admin/all\"}>Đã ẩn</Link>\r\n      </nav>\r\n      <div className=\"form-group av\">\r\n        <label htmlFor=\"exampleInputEmail1\">Tên sản phẩm</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"search\"\r\n          className=\"form-control\"\r\n          placeholder=\"Nhập vào\"\r\n        />\r\n        <button className=\"btn\" type=\"submit\">\r\n          Tìm kiếm\r\n        </button>\r\n      </div>\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-primary mt-16 larger\"\r\n        onClick={() => onAdd(null)}\r\n      >\r\n        Thêm 1 sản phẩm mới\r\n      </button>\r\n      {logged === true ? (\r\n        <Form id={id} onReload={onReloadPage} onSetLogged={onSetLogged}></Form>\r\n      ) : null}\r\n      <table class=\"table table-hover\">\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              <input\r\n                type=\"checkbox\"\r\n                placeholder=\"Deleted\"\r\n                name=\"Deleted\"\r\n                ref={register}\r\n              />\r\n            </th>\r\n            <th>Tên sản phẩm</th>\r\n\r\n            <th>Số lượng</th>\r\n            <th>Giá</th>\r\n            <th>Sửa thông tin</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {arr.length > 0\r\n            ? arr.map((value, index) => {\r\n                return (\r\n                  <Product_Item\r\n                    value={value}\r\n                    index={index}\r\n                    key={index}\r\n                    onDeleteId={onDeleteId}\r\n                    onEdit={onEdit}\r\n                  />\r\n                );\r\n              })\r\n            : null}\r\n        </tbody>\r\n      </table>\r\n\r\n      <nav aria-label=\"Page navigation example\">\r\n        {totalPages.map.length > 0\r\n          ? totalPages.map((value, index) => {\r\n              return (\r\n                <ul className=\"pagination\" key={index}>\r\n                  <li\r\n                    onClick={() => onAddPage(value.item)}\r\n                    className=\"page-item\"\r\n                  >\r\n                    <span className=\"page-link-ad\">{value.item}</span>\r\n                  </li>\r\n                </ul>\r\n              );\r\n            })\r\n          : null}\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Products;\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as actions from \"../../../../_actions/custommer/isDisplayForm/DisplayForm\";\r\nfunction Product_Item(props) {\r\n  let { value } = props;\r\n  console.log(value);\r\n  const dispatch = useDispatch();\r\n  const { register } = useForm();\r\n  const onDelete = (id) => {\r\n    props.onDeleteId(id);\r\n  };\r\n  const onEdit = (id) => {\r\n    let value = true;\r\n    props.onEdit(id, value);\r\n    dispatch(actions.openForm());\r\n  };\r\n  return (\r\n    <tr className=\"order\">\r\n      <td style={{ textAlign: \"center\" }}>\r\n        <input\r\n          type=\"checkbox\"\r\n          placeholder=\"Deleted\"\r\n          name=\"Deleted\"\r\n          ref={register}\r\n        />\r\n      </td>\r\n      <td>{value.id}</td>\r\n      <td className=\"name\">\r\n        <img\r\n          src={value.url}\r\n          alt=\"Mountain\"\r\n          width=\"80px\"\r\n          height=\"80px\"\r\n          style={{ objectFit: \"contain\" }}\r\n        ></img>\r\n        <div className=\"product-name\">\r\n          <p>{value.name}</p>\r\n        </div>\r\n        <div className=\"product-quantity\">x{value.quantity_in_stock}</div>\r\n      </td>\r\n      <td>{ value.total_price}</td>\r\n      <td>{value.status}</td>\r\n      <td>{value.created_at}</td>\r\n      <td>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => onDelete(value.id)}\r\n          class=\"btn btn-danger\"\r\n          style={{ padding: \"5px 10px\" }}\r\n        >\r\n          Xóa\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => onEdit(value.id)}\r\n          class=\"btn btn-primary\"\r\n          style={{ padding: \"5px 10px\" }}\r\n        >\r\n          Xem\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default Product_Item;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport posed from \"react-pose\";\r\n\r\nfunction useOnClickOutside(ref, handler) {\r\n  useEffect(() => {\r\n    const listener = event => {\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return;\r\n      }\r\n\r\n      handler(event);\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", listener);\r\n    document.addEventListener(\"touchstart\", listener);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", listener);\r\n      document.removeEventListener(\"touchstart\", listener);\r\n    };\r\n  }, []); // Empty array ensures that effect is only run on mount and unmount\r\n}\r\n\r\nconst modalBackgroundPoses = {\r\n  open: {\r\n    background: \"rgba(0, 0, 0, 0.2)\",\r\n    applyAtStart: {\r\n      display: \"block\"\r\n    }\r\n  },\r\n  closed: {\r\n    background: \"rgba(0, 0, 0, 0)\",\r\n    applyAtEnd: {\r\n      display: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst ModalBackground = styled(posed.div(modalBackgroundPoses))`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: red;\r\n`;\r\n\r\nconst modalPoses = {\r\n  open: {\r\n    opacity: 1,\r\n    transition: {\r\n      opacity: {\r\n        type: \"tween\",\r\n        duration: 200\r\n      }\r\n    }\r\n  },\r\n  closed: {\r\n    opacity: 0,\r\n    transition: {\r\n      opacity: {\r\n        type: \"tween\",\r\n        duration: 200\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst Modal = styled(posed.div(modalPoses))`\r\n  position: relative;\r\n  background: white;\r\n  width: 80%;\r\n  height: auto;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n  box-shadow: 0 2px 4px 0 rgba(50, 50, 93, 0.1);\r\n`;\r\n\r\nexport default function({ isOpen, toggle, children }) {\r\n  const ref = useRef();\r\n  return (\r\n    <ModalBackground initialPose=\"closed\" pose={isOpen ? \"open\" : \"closed\"}>\r\n      <Modal ref={ref}>{children}</Modal>\r\n    </ModalBackground>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Modal from \"./modal\";\r\nimport * as actions from \"./../../../../../../_actions/custommer/isDisplayForm/DisplayForm\";\r\nimport axios from \"axios\";\r\nimport \"./Form.scss\";\r\n\r\nfunction Form(props) {\r\n  let { id } = props;\r\n  const [list, setList] = useState({});\r\n  const isDisplayForm = useSelector((state) => state.isDisplayForm);\r\n  const [isModalOpen, toggleModal] = useState(isDisplayForm);\r\n  const [detail, setDetail] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [check, setCheck] = useState(false);\r\n  const dispatch = useDispatch();\r\n  //useEffect\r\n  useEffect(() => {\r\n    getProductDetail();\r\n  }, []);\r\n\r\n  const toggleModal5 = () => {\r\n    toggleModal(true);\r\n  };\r\n  const toggleModal6 = () => {\r\n    toggleModal(false);\r\n    props.onSetLogged();\r\n    dispatch(actions.closeForm());\r\n  };\r\n\r\n  async function getProductDetail() {\r\n    if (id) {\r\n      const response = await axios.get(\r\n        `http://localhost:4333/bill/detail/${id}`\r\n      );\r\n      if (response.data.result.length > 0) {\r\n        setList(response.data.result);\r\n        setDetail(response.data.result[0]);\r\n        setCheck(true);\r\n        \r\n      } else alert(\"Không tìm thấy chi tiết\");\r\n    }\r\n  }\r\nconsole.log(list);\r\n  return (\r\n    <div className=\"Apps form-sale\">\r\n      <Modal isOpen={isModalOpen} toggle={toggleModal}>\r\n        <form>\r\n          <div className=\"forms form-container\">\r\n            <div className=\"form-left\">\r\n              <div className=\"h3-group\">\r\n                <h3>Đã giao</h3>\r\n              </div>\r\n              <div className=\"h3-group\">\r\n                <h3>Lịch sử mua hàng của người mua</h3>\r\n                <div className=\"detail\">\r\n                  <span>\r\n                    Với người mua có tỷ lệ giao hành thành công thấp, hãy liên\r\n                    hệ xác nhận đơn hàng với họ trước khi gửi hàng.\r\n                  </span>\r\n                  <div className=\"roundy\">\r\n                    <div className=\"round\">100%</div>\r\n                    <span>\r\n                      Đơn giao thành công nhỏ hơn <br></br>\r\n                      {\">\"} <font color=\"red\">3</font> đơn hàng\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"roundy\">\r\n                    <div className=\"round\">5/5</div>\r\n                    <span>\r\n                      Đánh giá Người mua <br></br>\r\n                      <font color=\"red\">16</font> Đánh giá\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"h3-group\">\r\n                <h3>ID đơn hàng</h3>\r\n                <span>210313930BRE0K</span>\r\n                <h3>Địa chỉ người nhận</h3>\r\n\r\n                {check ? (\r\n                  <ul>\r\n                    <li>Name: {detail.shipping_name}</li>\r\n                    <li>Phone: {detail.phone}</li>\r\n                    <li>Địa chỉ: {detail.chitiet}</li>\r\n                  </ul>\r\n                ) : null}\r\n\r\n                <h3>Thông tin vận chuyển</h3>\r\n                <ul>\r\n                  <li>Đơn vị vận chuyển: Giao hàng tiết kiệm.</li>\r\n                  <li></li>\r\n                </ul>\r\n              </div>\r\n\r\n              <div className=\"identifi\">\r\n                <div className=\"user\">\r\n                  Trần Ha Văn <br></br>\r\n                  Email: {check ? detail.email : null}\r\n                </div>\r\n                <div className=\"social\">\r\n                  <button className=\"btn btn-primary\">Theo dõi</button>\r\n                  <button className=\"btn\">Chat ngay</button>\r\n                </div>\r\n              </div>\r\n              <div className=\"information\">\r\n                <nav>\r\n                  <h3>Thông tin thanh toán</h3>\r\n                  <h3>Xem lịch sử giao dịch</h3>\r\n                </nav>\r\n                <table class=\"table table-hover\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>STT</th>\r\n                      <th>Tên sản phẩm</th>\r\n                      <th>Trạng thái</th>\r\n                      <th>Số lượng</th>\r\n                      <th>Đơn giá</th>\r\n                      <th>Thành tiền</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {check || list.length > 0\r\n                      ? list.map((value, index) => {\r\n                          return (\r\n                            <tr key={index}>\r\n                              <td style={{ textAlign: \"center\" }}>\r\n                                {value.id}\r\n                              </td>\r\n                              <td className=\"name\">\r\n                                <img\r\n                                  src={value.url}\r\n                                  alt=\"Mountain\"\r\n                                  width=\"80px\"\r\n                                  height=\"80px\"\r\n                                  style={{ objectFit: \"contain\" }}\r\n                                ></img>\r\n                                <div className=\"product-name\">\r\n                                  <p>{value.product_name}</p>\r\n                                </div>\r\n                              </td>\r\n                              <td>{value.status}</td>\r\n\r\n                              <td>x{value.quantity_in_stock}</td>\r\n                              <td>{value.price}</td>\r\n                              <td\r\n                                style={{\r\n                                  textAlign: \"right\",\r\n                                  paddingRight: \"10px\",\r\n                                }}\r\n                              >\r\n                                {parseInt(value.quantity_in_stock) *\r\n                                  parseInt(value.price)}{\" \"}\r\n                                VNĐ\r\n                              </td>\r\n                            </tr>\r\n                          );\r\n                        })\r\n                      : null}\r\n                  </tbody>\r\n                  <tfoot>\r\n                    <tr>\r\n                      <td colSpan={5}>Tổng đơn hàng: </td>\r\n                      <td>{check ? detail.total_price : null} USD</td>\r\n                    </tr>\r\n                  </tfoot>\r\n                </table>\r\n                <div className=\"btn-group\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    {id ? \"Sửa sản phẩm\" : \"Thêm mới\"}\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => toggleModal6()}\r\n                    className=\"btn btn-default\"\r\n                  >\r\n                    Đóng\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-right\">\r\n              <li>Thông tin sản phẩm</li>\r\n              <li>Thông tin bán hàng</li>\r\n              <li>Quản lý hình ảnh</li>\r\n              <li>Vận chuyển</li>\r\n              <li>Thông tin khác</li>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport \"../scss/pageAdmin.scss\";\r\nimport \"./Sale.scss\";\r\nimport Sale_Item from \"./Sale_Item\";\r\nimport Form from \"./page/Form/Form\";\r\nimport * as actions from \"../../../../_actions/custommer/isDisplayForm/DisplayForm\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nfunction Sale(props) {\r\n  const dispatch = useDispatch();\r\n  // hiển thị khi true\r\n  const [logged, setlogged] = useState(false);\r\n  const [id, setID] = useState(\"\");\r\n  const { register } = useForm();\r\n  // phân trang\r\n  //biến currentpage này như số trang...1 là trang 1, 2 là trang 2, 3 là trang 3\r\n  const [currentpage, setCurrentpage] = useState(1);\r\n  // biến postperpage này như size dị...\r\n  //ví dụ danh sách 10 phần tử cho nó là 2 thì hiển thị danh sách 2 còn 8 phần tử kia phần trang ra 1,2,3,4,5\r\n  //gồm 5 trang hỏng tin thử đi\r\n  const [postperpage, setPostperpage] = useState(25);\r\n  // biến totalPages này để set mảng chứa số trang bị cắt\r\n  const [totalPages, setTotalPages] = useState([]);\r\n  const [arr, setArr] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n\r\n  //useEffect\r\n  useEffect(() => {\r\n    getUser();\r\n    if (currentpage) {\r\n      getUser();\r\n    }\r\n  }, [currentpage]);\r\n\r\n  // xóa\r\n  async function onDeleteId(id) {\r\n    Swal.fire({\r\n      title: \"Bạn có muốn xóa không?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Đồng ý\",\r\n      cancelButtonText: \"Hủy\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        axios.delete(`http://localhost:4333/bill/sale/${id}`).then(\r\n          (data) => {\r\n            setTimeout(function () {\r\n              console.log(data);\r\n\r\n              Swal.fire({\r\n                position: \"top-end\",\r\n                icon: \"success\",\r\n                title: \"Xóa thành công\",\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              });\r\n            }, 1000);\r\n            getUser();\r\n          },\r\n          (err) => {\r\n            console.log(\"Delelte\");\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n  // sửa\r\n  const onEdit = (id, value) => {\r\n    setlogged(true);\r\n    setID(id);\r\n  };\r\n  const onSetLogged = () => {\r\n    setlogged(false);\r\n  };\r\n  const onReloadPage = (name) => {\r\n    getUser();\r\n    setlogged(false);\r\n    Swal.fire({\r\n      position: \"top-end\",\r\n      icon: \"success\",\r\n      title: name,\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    });\r\n  };\r\n  //viets một hàm onAdd\r\n  const onAdd = (id) => {\r\n    setID(id);\r\n    setlogged(true);\r\n    dispatch(actions.openForm());\r\n  };\r\n  const onAddPage = (page) => {\r\n    setTimeout(function () {\r\n      setCurrentpage(page);\r\n    }, 1000);\r\n  };\r\n  async function getUser() {\r\n    //khai báo phần tử cuối\r\n    const indexofLastPost = currentpage * postperpage;\r\n    //khai báo phần tử đầu\r\n    const indexofFirstPost = indexofLastPost - postperpage;\r\n    try {\r\n      let arrPage = [];\r\n      const response = await axios.get(\"http://localhost:4333/bill/sale\");\r\n      // const bills = await axios.get(\"http://localhost:4333/bill/detail\");\r\n      // const cancel = await axios.get(\"http://localhost:4333/bill/cancel\");\r\n      // const returnlist = await axios.get(\"http://localhost:4333/bill/returnlist\");\r\n\r\n      setCount(response.data.count);\r\n      // cắt danh sách mảng bằng slice phần tử đầu phần tử cuối\r\n      const Post = response.data.result.slice(\r\n        indexofFirstPost,\r\n        indexofLastPost\r\n      );\r\n      setArr(Post);\r\n      //này e mấy e tính số trang page để hiển thị ra cho người dùng\r\n      // Math.ceil là mấy e lấy 5/2 =2.5 thì mình lấy 3 dị đó\r\n      // response.data.length só phần tử của mảng danh sách lấy về chia cho số phần mình cần hiển thị ra giao diện\r\n      for (\r\n        let i = 1;\r\n        i <= Math.ceil(parseInt(response.data.result.length) / postperpage);\r\n        i++\r\n      ) {\r\n        arrPage.push({ item: i });\r\n      }\r\n      // rảnh log mảng arrPage ra xem...\r\n      setTotalPages(arrPage);\r\n      //setTotalPages là cái mảng bị cắt rồi đó a e.....\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"body-cate\">\r\n      <nav>\r\n        <Link to={\"/admin/all\"}>Tất Cả</Link>\r\n        <Link to={\"/admin/all\"}>Chờ xác nhận</Link>\r\n        <Link to={\"/admin/all\"}>Chờ lấy hàng</Link>\r\n        <Link to={\"/admin/all\"}>Đang giao</Link>\r\n        <Link to={\"/admin/all\"}>Đã giao</Link>\r\n        <Link to={\"/admin/all\"}>Đơn hủy</Link>\r\n        <Link to={\"/admin/all\"}>Trả hàng/Hoàn tiền</Link>\r\n      </nav>\r\n      <div className=\"form-group av\">\r\n        <div className=\"btn-group\">\r\n          <button className=\"btn\" type=\"submit\">\r\n            Tìm kiếm Đơn hàng\r\n          </button>\r\n          <button className=\"btn outline-pri\" type=\"submit\">\r\n            Ngày đặt đơn hàng.\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <h3 className=\"mt-16\"> {count} đơn hàng</h3>\r\n      {logged === true ? (\r\n        <Form id={id} onReload={onReloadPage} onSetLogged={onSetLogged}></Form>\r\n      ) : null}\r\n      <table class=\"table table-hover\">\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              <input\r\n                type=\"checkbox\"\r\n                placeholder=\"Deleted\"\r\n                name=\"Deleted\"\r\n                ref={register}\r\n              />\r\n            </th>\r\n            <th>ID</th>\r\n            <th>Tên sản phẩm</th>\r\n            <th>Tổng đơn hàng</th>\r\n            <th>Trạng thái</th>\r\n            <th>Thời gian tạo</th>\r\n            <th>Thao tác</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {arr.length > 0\r\n            ? arr.map((value, index) => {\r\n                return (\r\n                  <>\r\n                    <Sale_Item\r\n                      value={value}\r\n                      index={index}\r\n                      key={index}\r\n                      onDeleteId={onDeleteId}\r\n                      onEdit={onEdit}\r\n                    />\r\n                  </>\r\n                );\r\n              })\r\n            : null}\r\n        </tbody>\r\n      </table>\r\n\r\n      <nav aria-label=\"Page navigation example\">\r\n        {totalPages.map.length > 0\r\n          ? totalPages.map((value, index) => {\r\n              return (\r\n                <ul className=\"pagination\" key={index}>\r\n                  <li\r\n                    onClick={() => onAddPage(value.item)}\r\n                    className=\"page-item\"\r\n                  >\r\n                    <span className=\"page-link-ad\">{value.item}</span>\r\n                  </li>\r\n                </ul>\r\n              );\r\n            })\r\n          : null}\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sale;\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as actions from \"../../../../_actions/custommer/isDisplayForm/DisplayForm\";\r\nfunction Comment_Item(props) {\r\n  let { value } = props;\r\n  const dispatch = useDispatch();\r\n  const { register } = useForm();\r\n  const onDelete = (id) => {\r\n    props.onDeleteId(id);\r\n  };\r\n  const onEdit = (id) => {\r\n    let value = true;\r\n    props.onEdit(id, value);\r\n    dispatch(actions.openForm());\r\n  };\r\n  return (\r\n    <tr className=\"order\">\r\n      <td style={{ textAlign: \"center\" }}>\r\n        <input\r\n          type=\"checkbox\"\r\n          placeholder=\"Deleted\"\r\n          name=\"Deleted\"\r\n          ref={register}\r\n        />\r\n      </td>\r\n      <td>{value.id}</td>\r\n      <td className=\"name\">\r\n        {value.txt_comment}\r\n        <div className=\"product-name\">\r\n          <p>{value.name}</p>\r\n        </div>\r\n        <div className=\"product-quantity\">{value.quantity_in_stock}</div>\r\n      </td>\r\n      <td>{value.user_id}</td>\r\n      <td>{value.product_id}</td>\r\n      <td>{value.created_at}</td>\r\n      <td>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => onDelete(value.id)}\r\n          class=\"btn btn-danger\"\r\n          style={{ padding: \"5px 10px\" }}\r\n        >\r\n          Xóa\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => onEdit(value.product_id)}\r\n          class=\"btn btn-primary\"\r\n          style={{ padding: \"5px 10px\" }}\r\n        >\r\n          Xem\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => onEdit(value.product_id)}\r\n          class=\"btn btn-primary\"\r\n          style={{ padding: \"5px 10px\" }}\r\n        >\r\n          Sửa\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default Comment_Item;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport posed from \"react-pose\";\r\n\r\nfunction useOnClickOutside(ref, handler) {\r\n  useEffect(() => {\r\n    const listener = event => {\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return;\r\n      }\r\n\r\n      handler(event);\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", listener);\r\n    document.addEventListener(\"touchstart\", listener);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", listener);\r\n      document.removeEventListener(\"touchstart\", listener);\r\n    };\r\n  }, []); // Empty array ensures that effect is only run on mount and unmount\r\n}\r\n\r\nconst modalBackgroundPoses = {\r\n  open: {\r\n    background: \"rgba(0, 0, 0, 0.2)\",\r\n    applyAtStart: {\r\n      display: \"block\"\r\n    }\r\n  },\r\n  closed: {\r\n    background: \"rgba(0, 0, 0, 0)\",\r\n    applyAtEnd: {\r\n      display: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst ModalBackground = styled(posed.div(modalBackgroundPoses))`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: red;\r\n`;\r\n\r\nconst modalPoses = {\r\n  open: {\r\n    opacity: 1,\r\n    transition: {\r\n      opacity: {\r\n        type: \"tween\",\r\n        duration: 200\r\n      }\r\n    }\r\n  },\r\n  closed: {\r\n    opacity: 0,\r\n    transition: {\r\n      opacity: {\r\n        type: \"tween\",\r\n        duration: 200\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst Modal = styled(posed.div(modalPoses))`\r\n  position: relative;\r\n  background: white;\r\n  width: 80%;\r\n  height: auto;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n  box-shadow: 0 2px 4px 0 rgba(50, 50, 93, 0.1);\r\n`;\r\n\r\nexport default function({ isOpen, toggle, children }) {\r\n  const ref = useRef();\r\n  return (\r\n    <ModalBackground initialPose=\"closed\" pose={isOpen ? \"open\" : \"closed\"}>\r\n      <Modal ref={ref}>{children}</Modal>\r\n    </ModalBackground>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Modal from \"./modal\";\r\nimport * as actions from \"./../../../../../../_actions/custommer/isDisplayForm/DisplayForm\";\r\nimport axios from \"axios\";\r\nimport \"./Form.scss\";\r\n\r\nfunction Form(props) {\r\n  let { id } = props;\r\n  const [list, setList] = useState({});\r\n  const isDisplayForm = useSelector((state) => state.isDisplayForm);\r\n  const [isModalOpen, toggleModal] = useState(isDisplayForm);\r\n  const [detail, setDetail] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [check, setCheck] = useState(false);\r\n  const dispatch = useDispatch();\r\n  //useEffect\r\n  useEffect(() => {\r\n    getProductDetail();\r\n  }, []);\r\n\r\n  const toggleModal5 = () => {\r\n    toggleModal(true);\r\n  };\r\n  const toggleModal6 = () => {\r\n    toggleModal(false);\r\n    props.onSetLogged();\r\n    dispatch(actions.closeForm());\r\n  };\r\n\r\n  async function getProductDetail() {\r\n    if (id) {\r\n      const response = await axios.get(\r\n        `http://localhost:4333/comment/all/${id}`\r\n      );\r\n      if (response.data.result.length > 0) {\r\n        setList(response.data.result);\r\n        setDetail(response.data.result[0]);\r\n        setCheck(true);\r\n      } else alert(\"Không tìm thấy chi tiết\");\r\n    }\r\n  }\r\n  console.log(list);\r\n  return (\r\n    <div className=\"Apps form-sale\">\r\n      <Modal isOpen={isModalOpen} toggle={toggleModal}>\r\n        <form>\r\n          <div className=\"forms form-container\">\r\n            <div className=\"form-left\">\r\n              <div className=\"h3-group\">\r\n                <h3>{detail.status === 1 ? \"Đã trả lời\" : \"Chưa trả lời\"}</h3>\r\n              </div>\r\n              <div className=\"h3-group\">\r\n                <h3>Lịch sử mua hàng của người mua</h3>\r\n                <div className=\"detail\">\r\n                  <span>\r\n                    Với người mua có tỷ lệ giao hành thành công thấp, hãy liên\r\n                    hệ xác nhận đơn hàng với họ trước khi gửi hàng.\r\n                  </span>\r\n                  <div className=\"roundy\">\r\n                    <div className=\"round\">100%</div>\r\n                    <span>\r\n                      Đơn giao thành công nhỏ hơn <br></br>\r\n                      {\">\"} <font color=\"red\">3</font> đơn hàng\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"roundy\">\r\n                    <div className=\"round\">5/5</div>\r\n                    <span>\r\n                      Đánh giá Người mua <br></br>\r\n                      <font color=\"red\">16</font> Đánh giá\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"h3-group\">\r\n                <h3>ID đơn hàng</h3>\r\n                <span>210313930BRE0K</span>\r\n                <h3>Địa chỉ người nhận</h3>\r\n\r\n                {check ? (\r\n                  <ul>\r\n                    <li>Fist Name: {detail.first_name}</li>\r\n                    <li>Last Name: {detail.last_name}</li>\r\n                    <li>Địa chỉ: {detail.chitiet}</li>\r\n                  </ul>\r\n                ) : null}\r\n\r\n                <h3>Thông tin vận chuyển</h3>\r\n                <ul>\r\n                  <li>Đơn vị vận chuyển: Giao hàng tiết kiệm.</li>\r\n                  <li></li>\r\n                </ul>\r\n              </div>\r\n\r\n              <div className=\"identifi\">\r\n                <div className=\"user\">\r\n                  Trần Ha Văn <br></br>\r\n                  Email: {check ? detail.email : null}\r\n                </div>\r\n                <div className=\"social\">\r\n                  <button className=\"btn btn-primary\">Theo dõi</button>\r\n                  <button className=\"btn\">Chat ngay</button>\r\n                </div>\r\n              </div>\r\n              <div className=\"information\">\r\n                <nav>\r\n                  <h3>Thông tin thanh toán</h3>\r\n                  <h3>Xem lịch sử giao dịch</h3>\r\n                </nav>\r\n                <table class=\"table table-hover\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>STT</th>\r\n                      <th>Câu hỏi</th> \r\n                      <th>Trạng thái</th>\r\n                      <th>TK Hỏi</th>\r\n                      <th>TK TL</th>\r\n                      <th>Trả lời</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {check || list.length > 0\r\n                      ? list.map((value, index) => {\r\n                          return (\r\n                            <tr key={index}>\r\n                              <td style={{ textAlign: \"center\" }}>\r\n                                {value.id}\r\n                              </td>\r\n                              <td className=\"name\">\r\n                                {value.txt_comment}\r\n                                <div className=\"product-name\">\r\n                                  <p>{}</p>\r\n                                </div>\r\n                              </td>\r\n                              <td>{value.status === 1 ? \"Đã trả lời\" : \"Chưa trả lời\"}</td>\r\n                              <td>{value.user_id}</td>\r\n                              <td>{value.users_id}</td>\r\n                              <td>{value.txt_answer}</td>\r\n                              \r\n                            </tr>\r\n                          );\r\n                        })\r\n                      : null}\r\n                  </tbody>\r\n                </table>\r\n                <div className=\"btn-group\">\r\n                  <button type=\"submit\" className=\"btn btn-primary\">\r\n                    {id ? \"Sửa sản phẩm\" : \"Thêm mới\"}\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => toggleModal6()}\r\n                    className=\"btn btn-default\"\r\n                  >\r\n                    Đóng\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-right\">\r\n              <li>Thông tin sản phẩm</li>\r\n              <li>Thông tin bán hàng</li>\r\n              <li>Quản lý hình ảnh</li>\r\n              <li>Vận chuyển</li>\r\n              <li>Thông tin khác</li>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport \"../scss/pageAdmin.scss\";\r\nimport \"./Sale.scss\";\r\nimport Comment_Item from \"./Comment_Item\";\r\nimport Form from \"./page/Form/Form\";\r\nimport * as actions from \"../../../../_actions/custommer/isDisplayForm/DisplayForm\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nfunction Comment(props) {\r\n  const dispatch = useDispatch();\r\n  // hiển thị khi true\r\n  const [logged, setlogged] = useState(false);\r\n  const [id, setID] = useState(\"\");\r\n  const { register } = useForm();\r\n  // phân trang\r\n  //biến currentpage này như số trang...1 là trang 1, 2 là trang 2, 3 là trang 3\r\n  const [currentpage, setCurrentpage] = useState(1);\r\n  // biến postperpage này như size dị...\r\n  //ví dụ danh sách 10 phần tử cho nó là 2 thì hiển thị danh sách 2 còn 8 phần tử kia phần trang ra 1,2,3,4,5\r\n  //gồm 5 trang hỏng tin thử đi\r\n  const [postperpage, setPostperpage] = useState(25);\r\n  // biến totalPages này để set mảng chứa số trang bị cắt\r\n  const [totalPages, setTotalPages] = useState([]);\r\n  const [arr, setArr] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n\r\n  //useEffect\r\n  useEffect(() => {\r\n    getUser();\r\n    if (currentpage) {\r\n      getUser();\r\n    }\r\n  }, [currentpage]);\r\n\r\n  // xóa\r\n  async function onDeleteId(id) {\r\n    Swal.fire({\r\n      title: \"Bạn có muốn xóa không?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Đồng ý\",\r\n      cancelButtonText: \"Hủy\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        axios.delete(`http://localhost:4333/comment/delete/${id}`).then(\r\n          (data) => {\r\n            setTimeout(function () {\r\n              console.log(data);\r\n\r\n              Swal.fire({\r\n                position: \"top-end\",\r\n                icon: \"success\",\r\n                title: \"Xóa thành công\",\r\n                showConfirmButton: false,\r\n                timer: 1500,\r\n              });\r\n            }, 1000);\r\n            getUser();\r\n          },\r\n          (err) => {\r\n            console.log(\"Delelte\");\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n  // sửa\r\n  const onEdit = (id, value) => {\r\n    setlogged(true);\r\n    setID(id);\r\n  };\r\n  const onSetLogged = () => {\r\n    setlogged(false);\r\n  };\r\n  const onReloadPage = (name) => {\r\n    getUser();\r\n    setlogged(false);\r\n    Swal.fire({\r\n      position: \"top-end\",\r\n      icon: \"success\",\r\n      title: name,\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    });\r\n  };\r\n  //viets một hàm onAdd\r\n  const onAdd = (id) => {\r\n    setID(id);\r\n    setlogged(true);\r\n    dispatch(actions.openForm());\r\n  };\r\n  const onAddPage = (page) => {\r\n    setTimeout(function () {\r\n      setCurrentpage(page);\r\n    }, 1000);\r\n  };\r\n  async function getUser() {\r\n    //khai báo phần tử cuối\r\n    const indexofLastPost = currentpage * postperpage;\r\n    //khai báo phần tử đầu\r\n    const indexofFirstPost = indexofLastPost - postperpage;\r\n    try {\r\n      let arrPage = [];\r\n      const response = await axios.get(\"http://localhost:4333/comment/all\");\r\n      // const bills = await axios.get(\"http://localhost:4333/bill/detail\");\r\n      // const cancel = await axios.get(\"http://localhost:4333/bill/cancel\");\r\n      // const returnlist = await axios.get(\"http://localhost:4333/bill/returnlist\");\r\n      setCount(response.data.count);\r\n      // cắt danh sách mảng bằng slice phần tử đầu phần tử cuối\r\n      const Post = response.data.result.slice(\r\n        indexofFirstPost,\r\n        indexofLastPost\r\n      );\r\n      setArr(Post);\r\n      //này e mấy e tính số trang page để hiển thị ra cho người dùng\r\n      // Math.ceil là mấy e lấy 5/2 =2.5 thì mình lấy 3 dị đó\r\n      // response.data.length só phần tử của mảng danh sách lấy về chia cho số phần mình cần hiển thị ra giao diện\r\n      for (\r\n        let i = 1;\r\n        i <= Math.ceil(parseInt(response.data.result.length) / postperpage);\r\n        i++\r\n      ) {\r\n        arrPage.push({ item: i });\r\n      }\r\n      // rảnh log mảng arrPage ra xem...\r\n      setTotalPages(arrPage);\r\n      //setTotalPages là cái mảng bị cắt rồi đó a e.....\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"body-cate\">\r\n      <nav>\r\n        <Link to={\"/admin/all\"}>Tất Cả</Link>\r\n        <Link to={\"/admin/all\"}>Chờ xác nhận</Link>\r\n        <Link to={\"/admin/all\"}>Chờ lấy hàng</Link>\r\n        <Link to={\"/admin/all\"}>Đang giao</Link>\r\n        <Link to={\"/admin/all\"}>Đã giao</Link>\r\n        <Link to={\"/admin/all\"}>Đơn hủy</Link>\r\n        <Link to={\"/admin/all\"}>Trả hàng/Hoàn tiền</Link>\r\n      </nav>\r\n      <div className=\"form-group av\">\r\n        <div className=\"btn-group\">\r\n          <button className=\"btn\" type=\"submit\">\r\n            Tìm kiếm Đơn hàng\r\n          </button>\r\n          <button className=\"btn outline-pri\" type=\"submit\">\r\n            Ngày đặt đơn hàng.\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <h3 className=\"mt-16\"> {count} đơn hàng</h3>\r\n      {logged === true ? (\r\n        <Form id={id} onReload={onReloadPage} onSetLogged={onSetLogged}></Form>\r\n      ) : null}\r\n      <table class=\"table table-hover\">\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              <input\r\n                type=\"checkbox\"\r\n                placeholder=\"Deleted\"\r\n                name=\"Deleted\"\r\n                ref={register}\r\n              />\r\n            </th>\r\n            <th>ID</th>\r\n            <th>Tên sản phẩm</th>\r\n            <th>Tài khoản</th>\r\n            <th>Sản phẩm</th>\r\n            <th>Thời gian tạo</th>\r\n            <th>Thao tác</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {arr.length > 0\r\n            ? arr.map((value, index) => {\r\n                return (\r\n                  <>\r\n                    <Comment_Item\r\n                      value={value}\r\n                      index={index}\r\n                      key={index}\r\n                      onDeleteId={onDeleteId}\r\n                      onEdit={onEdit}\r\n                    />\r\n                  </>\r\n                );\r\n              })\r\n            : null}\r\n        </tbody>\r\n      </table>\r\n\r\n      <nav aria-label=\"Page navigation example\">\r\n        {totalPages.map.length > 0\r\n          ? totalPages.map((value, index) => {\r\n              return (\r\n                <ul className=\"pagination\" key={index}>\r\n                  <li\r\n                    onClick={() => onAddPage(value.item)}\r\n                    className=\"page-item\"\r\n                  >\r\n                    <span className=\"page-link-ad\">{value.item}</span>\r\n                  </li>\r\n                </ul>\r\n              );\r\n            })\r\n          : null}\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comment;\r\n","import React from 'react';\r\n\r\nfunction HomeAdmin(props) {\r\n    return (\r\n        <div>\r\n            <h1>Home Admin</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeAdmin;","import React from \"react\";\r\nimport { HashRouter, Link, Route, Switch } from \"react-router-dom\";\r\nimport Footer from \"../../../components/admin/footer/Footer\";\r\nimport HeaderAdmin from \"../../../components/admin/header/HeaderAdmin\";\r\nimport Category from \"../../../components/admin/pages/Category/Product_Category\";\r\nimport Products from \"../../../components/admin/pages/Product/Products\";\r\nimport Sale from \"../../../components/admin/pages/Sale/Sale\";\r\nimport Comment from \"../../../components/admin/pages/Comment/Comment\";\r\nimport HomeAdmin from \"../../../components/admin/pages/Home-admin/HomeAdmin\";\r\nimport \"./Body-deafault-admin.scss\";\r\nfunction Admin_deafault_page(props) {\r\n  return (\r\n    <HashRouter>\r\n      <React.Suspense>\r\n        <HeaderAdmin></HeaderAdmin>\r\n        <div className=\"body-deafault-admin\">\r\n          <div className=\"item-body-deafault-admin-left\">\r\n            <Link to={\"/admin/category\"} className=\"ul\">\r\n              <span> Quản Lý Tài Khoản</span>\r\n            </Link>\r\n            <Link to={\"/admin/sale\"} className=\"ul\">\r\n              <span>Quản Lý Đơn Hàng</span>\r\n              <Link to={\"/admin/sale/all\"}>Tất Cả</Link>\r\n              <Link to={\"/admin/sale/cancel\"}>Đơn Hủy</Link>\r\n              <Link to={\"/admin/sale/returnlist\"}>Trả Hàng / Hoàn Tiền</Link>\r\n            </Link>\r\n            <Link to={\"/admin/product\"} className=\"ul\">\r\n              <span>Quản Lý Sản Phẩm</span>\r\n              <Link to={\"/admin/product/all\"}>Tất Cả</Link>\r\n              <Link to={\"/admin/product/category\"}>Phân Loại Sản Phẩm</Link>\r\n              <Link to={\"/admin/product/disable\"}>Sản Phẩm Hết Hàng</Link>\r\n            </Link>\r\n            <Link to={\"/admin/comment\"} className=\"ul\">\r\n              <span>Quản Lý Bình Luận</span>\r\n              <Link to={\"/admin/comment/all\"}>Tất Cả</Link>\r\n              <Link to={\"/admin/comment/unreply\"}>Chưa Trả Lời</Link>\r\n              <Link to={\"/admin/comment/reply\"}>Đã Trả Lời</Link>\r\n            </Link>\r\n          </div>\r\n          <div className=\"item-body-deafault-admin-right\">\r\n            <Switch>\r\n              <Route path={\"/admin/sale\"} component={Sale} />\r\n              <Route path={\"/admin/product\"} component={Products} />\r\n              <Route path={\"/admin/category\"} component={Category} />\r\n              <Route path={\"/admin/comment\"} component={Comment} />\r\n              <Route extra path={\"/\"} component={HomeAdmin} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </React.Suspense>\r\n      <Footer></Footer>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default Admin_deafault_page;\r\n"],"sourceRoot":""}