{"version":3,"sources":["app/components/admin/body/_product/AdminProduct.js","app/actions/admin/products/AdProduct.js","app/actions/custommer/products/Product.js","app/untils/callAPI.js","app/components/admin/body/_pagination/Pagination.js"],"names":["AdminProduct","props","api","axios","create","baseURL","history","useHistory","dispatch","useDispatch","list","useSelector","state","GetProductDatabase","console","log","LoadProduct","useState","data","edit","submitEdit","setState","currentpage","setCurrentpage","postperpage","totalPages","setTotalPages","getUser","a","indexofFirstPost","indexofLastPost","get","then","arrPage","Post","slice","i","Math","ceil","parseInt","result","length","push","item","error","useEffect","deleteUser","id","delete","handleClickEDIT","value","payload","actions","filter","type","AdProduct","className","onClick","undefined","map","key","name","quantity_in_stock","price","cate_name","Pagination","onAddPage","page","setTimeout","IDName","types","getProduct","addProductToCart","deleteProductInCart","getIncrease_Quantity","getDecrease_Quantity","getBill_ID","bill_id","getUSER_ID","user_id","actLoadProductListRequest","endPoint","method","body","headers","url","Config","res","actLoadProductList","dataProduct"],"mappings":"8OAqNeA,UA7Mf,SAAsBC,GAEpB,IAAMC,EAAMC,IAAMC,OAAO,CACvBC,QAAQ,kCAGJC,EAAUC,cACVC,EAAWC,cACXC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMC,sBAC1CC,QAAQC,IAAIL,GACZ,IAAMM,EAAcL,aAAY,SAACC,GAAD,OAAWA,EAAMI,eACjDF,QAAQC,IAAIC,GAXe,MAkBDC,mBAAS,CAAEC,KAAM,GAAIC,KAAM,GAAIC,YAAY,IAlB1C,mBAkBpBR,EAlBoB,KAkBbS,EAlBa,OAmBHJ,mBAAS,IAnBN,gCAqBWA,mBAAS,IArBpB,mBAqBpBK,EArBoB,KAqBPC,EArBO,OA2BWN,mBAAS,GA3BpB,mBA2BpBO,EA3BoB,aA+BSP,mBAAS,KA/BlB,mBA+BpBQ,EA/BoB,KA+BRC,EA/BQ,KAiCrBC,EAAO,uCAAG,sCAAAC,EAAA,6DAIRC,GAFAC,EAAkBR,EAAcE,GAEKA,EAJ7B,kBAMKtB,EAAI6B,IAAI,KAAKC,MAAK,qBAAGd,QAN1B,OAeZ,IATIA,EANQ,OAORe,EAAU,GACRC,EAAOxB,EAAKQ,KAAKiB,MAAMN,EAAkBC,GAI/CT,EAAS,CAAEH,KAAMgB,IAIXE,EAAI,EACRA,GAAKC,KAAKC,KAAKC,SAASrB,EAAKsB,OAAOC,QAAUjB,GAC9CY,IAEAH,EAAQS,KAAK,CAAEC,KAAMP,IAIvBV,EAAcO,GAxBF,kDA2BZnB,QAAQ8B,MAAR,MA3BY,0DAAH,qDAoCbC,qBAAU,WACRlB,IACIX,GACEA,EAAYyB,OAAS,IACvB/B,EAAKQ,KAAOF,GAGZM,GACFK,MAED,CAACL,EAAaN,IAMjB,IAMM8B,EAAU,uCAAG,WAAOC,GAAP,SAAAnB,EAAA,sEACA1B,EAAI8C,OAAJ,WAAeD,IADf,cAEjBpB,IAFiB,2CAAH,sDAcVsB,EAAkB,SAACF,EAAIG,GAO3B,ICjH2BC,ED2G3B3C,EAAS4C,OAOTxC,EAAMM,KAAKmC,QAAO,SAACV,GACbA,EAAKI,KAAOA,GACAJ,KAKlBnC,GCzH2B2C,EDyHKD,ECxH3B,CACLI,KAAMC,IACNJ,aDuHA7C,EAAQoC,KAAK,mBAuBf,OACE,yBAASc,UAAU,aAAnB,SACE,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,SAAf,SACE,sBAAMA,UAAU,UAAUC,QA/DX,WACrBnD,EAAQoC,KAAK,mBA8DP,wEAIF,qBAAKc,UAAU,SAAf,SACE,sBAAKA,UAAU,QAAf,UACE,wBAAOA,UAAU,WAAjB,UACE,uBAAOA,UAAU,QAAjB,SACE,+BACE,oCACA,wCACA,qCACA,wCACA,+CACA,yCACA,8CAGJ,qCACkBE,IAAf9C,EAAMM,KACHN,EAAMM,KAAKyC,KAAI,SAACT,EAAOU,GACrB,OACE,+BACE,6BAAKV,EAAMH,KACX,6BAAKG,EAAMW,OACX,6BAAKX,EAAMY,oBACX,6BAAKZ,EAAMa,QACX,6BAAKb,EAAMc,YACX,oDACA,qBAAIR,UAAU,WAAd,UACE,sBACEA,UAAU,aACVC,QAAS,kBAAMX,EAAWI,EAAMH,KAFlC,oBAMA,sBACES,UAAU,WACVC,QAAS,kBAAMR,EAAgBC,EAAMH,GAAIG,IAF3C,iCAdKU,MAwBb,UAGR,cAACK,EAAA,EAAD,CAAYC,UArIJ,SAACC,GACjBC,YAAW,WACT7C,EAAe4C,KACd,MAkIuC1C,WAAYA,gB,8WE1MnD,IAAM4C,EAAS,SAACtB,GACrB,MAAO,CACLO,KAAMgB,IACNvB,OAISwB,EAAa,WACxB,MAAO,CACLjB,KAAMgB,MAKGE,EAAmB,SAACrB,GAC/B,MAAO,CACLG,KAAMgB,IACNnB,YAKSsB,EAAsB,SAACtB,GAClC,MAAO,CACLG,KAAMgB,IACNnB,YAGSuB,EAAuB,SAACvB,GACnC,MAAO,CACLG,KAAMgB,IACNnB,YAGSwB,EAAuB,SAACxB,GACnC,MAAO,CACLG,KAAMgB,IACNnB,YAYSyB,EAAa,SAACC,GACzB,MAAO,CACLvB,KAAMgB,IACNO,YAGSC,EAAa,SAACC,GACzB,MAAO,CACLzB,KAAMgB,IACNS,YAmBSC,EAA4B,WACvC,OAAO,SAACxE,GACN,OC/E4ByE,ED+Eb,UC/EuBC,ED+EZ,MC/EoBC,ED+Eb,KC9E5BhF,IAAM,CACX+E,OAAQA,EACRE,QAAS,CAAE,eAAgB,oBAC3BC,IAAI,GAAD,OAAKC,IAAL,YAAuBL,GAC1B/D,KAAMiE,KD0EiCnD,MAAK,SAACuD,GAC3C/E,EAASgF,EAAmBD,EAAIrE,UChFvB,IAAiB+D,EAAUC,EAAQC,IDsFrCK,EAAqB,SAACC,GACjC,MAAO,CACLnC,KAAMgB,IACNmB,iB,2EEnEWxB,IAtBf,SAAoBhE,GAAQ,IAClBwB,EAA0BxB,EAA1BwB,WAAYyC,EAAcjE,EAAdiE,UAClB,OACI,qBAAKV,UAAU,aAAf,SACI,oBAAIA,UAAU,aAAd,SAEQ/B,EAAWkC,IAAIlB,OAAS,EAAIhB,EAAWkC,KAAI,SAACT,EAAOU,GAC/C,OACI,oBAAIH,QAAS,kBAAMS,EAAUhB,EAAMP,OAAOa,UAAU,YAApD,SACI,sBAAMA,UAAU,YAAhB,SACKN,EAAMP,YAIlB,W","file":"static/js/4.60b063ae.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Pagination from \"../_pagination/Pagination\";\r\nimport \"../scss/HomeAdmin.scss\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../../actions/custommer/products/Product\";\r\nimport * as action2 from \"../../../../actions/admin/products/AdProduct\";\r\nfunction AdminProduct(props) {\r\n  // QUẢN LÝ API\r\n  const api = axios.create({\r\n    baseURL: `http://localhost:4333/product`,\r\n  });\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const list = useSelector((state) => state.GetProductDatabase);\r\n  console.log(list);\r\n  const LoadProduct = useSelector((state) => state.LoadProduct);\r\n  console.log(LoadProduct);\r\n  // QUẢN LÝ SẢN PHẨM.\r\n  // 1. VIEW.\r\n\r\n  // 1.1 Get tất cả sản phẩm của product.\r\n  // Ở đây, tất cả sản phẩm đã lưu ở Redux GetProductDatabase.\r\n  // => Gọi về sử dụng.\r\n  const [state, setState] = useState({ data: [], edit: [], submitEdit: false });\r\n  const [edit, setEdit] = useState({});\r\n\r\n  const [currentpage, setCurrentpage] = useState(1);\r\n  // biến postperpage này như size dị...\r\n  //ví dụ danh sách 10 phần tử cho nó là 2 thì hiển thị danh sách 2 còn 8 phần tử kia phần trang ra 1,2,3,4,5\r\n  //gồm 5 trang hỏng tin thử đi\r\n\r\n  //trang có bao nhiêu phần tử.\r\n  const [postperpage, setPostperpage] = useState(8);\r\n  // biến totalPages này để set mảng chứa số trang bị cắt 1 2 3\r\n\r\n  // số lượng trang.\r\n  const [totalPages, setTotalPages] = useState([]);\r\n\r\n  const getUser = async () => {\r\n    //khai báo phần tử cuối\r\n    const indexofLastPost = currentpage * postperpage;\r\n    //khai báo phần tử đầu\r\n    const indexofFirstPost = indexofLastPost - postperpage;\r\n    try {\r\n      let data = await api.get(\"/\").then(({ data }) => data);\r\n      let arrPage = [];\r\n      const Post = list.data.slice(indexofFirstPost, indexofLastPost);\r\n      //                      1*2 = 2,            ,  2-2 = 0\r\n      // 0,1\r\n      // data => 2-> 8;\r\n      setState({ data: Post });\r\n\r\n      // cắt danh sách mảng bằng slice phần tử đầu phần tử cuối\r\n      for (\r\n        let i = 1;\r\n        i <= Math.ceil(parseInt(data.result.length) / postperpage);\r\n        i++\r\n      ) {\r\n        arrPage.push({ item: i });\r\n      }\r\n      // rảnh log mảng arrPage ra xem...\r\n      // số lượng trang - li\r\n      setTotalPages(arrPage);\r\n      //setTotalPages là cái mảng bị cắt rồi đó a e.....\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const onAddPage = (page) => {\r\n    setTimeout(function () {\r\n      setCurrentpage(page);\r\n    }, 1000);\r\n  };\r\n  useEffect(() => {\r\n    getUser();\r\n    if (LoadProduct) {\r\n      if (LoadProduct.length > 0) {\r\n        list.data = LoadProduct;\r\n      }\r\n    }\r\n    if (currentpage) {\r\n      getUser();\r\n    }\r\n  }, [currentpage, LoadProduct]);\r\n  //\r\n\r\n  //function\r\n  // 1. thêm sản phẩm mới.\r\n  // chuyển link sang giao diện upload sản phẩm.\r\n  const handleClickADD = () => {\r\n    history.push(\"product/upload\");\r\n  };\r\n  // 2. xóa sản phẩm.\r\n  // 2.1 click: button xóa.\r\n  // 2.2 xóa\r\n  const deleteUser = async (id) => {\r\n    let dele = await api.delete(`/${id}`);\r\n    getUser();\r\n  };\r\n\r\n  // 3. Sửa sản phẩm\r\n  // 3.1 Click, lấy giá trị hiện tại lưu vào edit => chuyển trang.\r\n  // 3.2 thực hiện chỉnh sửa bên form upload.\r\n  // 3.3 cập nhập, lên database.\r\n  //\r\n  // 3. sửa sản phẩm\r\n  // Sửa nhanh được 1 vài thuộc tính.\r\n  // Sửa chi tiết => chuyển trang sang giao diện upload. đăng.\r\n  // 3.1 hiển thị giao diện sửa.\r\n  const handleClickEDIT = (id, value) => {\r\n    dispatch(actions.actLoadProductListRequest());\r\n    // dispatch(actions.actLoadProductListRequest());\r\n    // console.log(id);\r\n    // console.log(value);\r\n\r\n    //\r\n    let itemProduct;\r\n    state.data.filter((item) => {\r\n      if (item.id === id) {\r\n        itemProduct = item;\r\n      }\r\n    });\r\n\r\n    \r\n    dispatch(action2.getProductEdit(value));\r\n    history.push(\"product/upload\");\r\n  };\r\n\r\n  // 3.2 nhận thông tin sửa.\r\n  // 3.2.1 lấy thông tin hiện tại theo id.\r\n  // 3.2.2 xuất ra form.\r\n  // 3.2.3 nhận thông tin nhập vào.\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setEdit((edit) => ({ ...edit, [name]: `${value}` }));\r\n  };\r\n  // 3.3 click submit, put thông tin đã nhận ở 3.2.3 lên database.\r\n  const handleSubmitEDIT = async (event) => {\r\n    event.preventDefault();\r\n    let dele = await api.put(`/update_product/${edit.id}`, edit);\r\n    getUser();\r\n  };\r\n\r\n  // 4. hủy thao tác\r\n  // 4.1 click button Cancel\r\n  // 4.2 xóa dữ liêu form.\r\n  const handleCancel = () => {};\r\n  // END VIEW.\r\n  return (\r\n    <section className=\"home-admin\">\r\n      <div className=\"home-user home-right\">\r\n        <div className=\"col-12\">\r\n          <span className=\"btn add\" onClick={handleClickADD}>\r\n            Thêm tài khoản - Chuyển qua trang upload\r\n          </span>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <div className=\"table\">\r\n            <table className=\"col-auto\">\r\n              <thead className=\"title\">\r\n                <tr>\r\n                  <th>ID</th>\r\n                  <th>Tên</th>\r\n                  <th>Kho</th>\r\n                  <th>Giá</th>\r\n                  <th>Danh mục</th>\r\n                  <th>Ngày</th>\r\n                  <th>PERFORM</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {state.data !== undefined\r\n                  ? state.data.map((value, key) => {\r\n                      return (\r\n                        <tr key={key}>\r\n                          <td>{value.id}</td>\r\n                          <td>{value.name}</td>\r\n                          <td>{value.quantity_in_stock}</td>\r\n                          <td>{value.price}</td>\r\n                          <td>{value.cate_name}</td>\r\n                          <td>Cập nhập</td>\r\n                          <td className=\"td-group\">\r\n                            <span\r\n                              className=\"btn delete\"\r\n                              onClick={() => deleteUser(value.id)}\r\n                            >\r\n                              Xóa\r\n                            </span>\r\n                            <span\r\n                              className=\"btn edit\"\r\n                              onClick={() => handleClickEDIT(value.id, value)}\r\n                            >\r\n                              Sửa nhanh\r\n                            </span>\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })\r\n                  : null}\r\n              </tbody>\r\n            </table>\r\n            <Pagination onAddPage={onAddPage} totalPages={totalPages} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default AdminProduct;\r\n","import * as AdProduct from \"../../../constants/ActionType\";\r\n\r\nexport const getProductDatabase = () => {\r\n  return {\r\n    type: AdProduct.GETPRODUCT_DATABASE,\r\n  };\r\n};\r\nexport const getProductEdit = (payload) => {\r\n  return {\r\n    type: AdProduct.PRODUCT_EDIT,\r\n    payload\r\n  };\r\n};","import * as types from \"../../../constants/ActionType\";\r\nimport callAPI from \"./../../../untils/callAPI\";\r\n\r\nexport const IDName = (id) => {\r\n  return {\r\n    type: types.ID,\r\n    id,\r\n  };\r\n};\r\n\r\nexport const getProduct = () => {\r\n  return {\r\n    type: types.GETPRODUCT,\r\n  };\r\n};\r\n\r\n// cart\r\nexport const addProductToCart = (payload) => {\r\n  return {\r\n    type: types.ADD_PRODUCT_TO_CART,\r\n    payload,\r\n  };\r\n};\r\n\r\n\r\nexport const deleteProductInCart = (payload) => {\r\n  return {\r\n    type: types.DELETE_CART,\r\n    payload,\r\n  };\r\n};\r\nexport const getIncrease_Quantity = (payload) => {\r\n  return {\r\n    type: types.INCREASE_QUANTITY,\r\n    payload,\r\n  };\r\n};\r\nexport const getDecrease_Quantity = (payload) => {\r\n  return {\r\n    type: types.DECREASE_QUANTITY,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const getTotal_Price = (payload) => {\r\n  return {\r\n    type: types.TOTAL_PRICE,\r\n    payload,\r\n  };\r\n};\r\n\r\n// end cart\r\nexport const getBill_ID = (bill_id) => {\r\n  return {\r\n    type: types.BILL_ID,\r\n    bill_id,\r\n  };\r\n};\r\nexport const getUSER_ID = (user_id) => {\r\n  return {\r\n    type: types.CART_ID,\r\n    user_id,\r\n  };\r\n};\r\n\r\nexport const getIMG_ID = (img_id) => {\r\n  return {\r\n    type: types.UPIMG_ID,\r\n    img_id,\r\n  };\r\n};\r\n\r\nexport const getPRODUCT_ID = (product_id) => {\r\n  return {\r\n    type: types.UPPRODUCT_ID,\r\n    product_id,\r\n  };\r\n};\r\n\r\n//Load ProductList\r\nexport const actLoadProductListRequest = () => {\r\n  return (dispatch) => {\r\n    return callAPI(`product`, \"GET\", null).then((res) => {\r\n      dispatch(actLoadProductList(res.data));\r\n    });\r\n  };\r\n};\r\n\r\n//load product\r\nexport const actLoadProductList = (dataProduct) => {\r\n  return {\r\n    type: types.LOAD_PRODUCT_LIST,\r\n    dataProduct, //action sẽ nhận lại\r\n  };\r\n};\r\n","import axios from \"axios\";\r\nimport * as Config from \"./../constants/ActionType\";\r\n\r\nexport default function callAPi(endPoint, method, body) {\r\n  return axios({\r\n    method: method,\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    url: `${Config.API_URL}/${endPoint}`,\r\n    data: body,\r\n  });\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport '../_pagination/Pagination.scss';\r\nfunction Pagination(props) {\r\n    let { totalPages, onAddPage } = props;\r\n    return (\r\n        <nav className=\"navigation\">\r\n            <ul className=\"pagination\">\r\n                {   \r\n                    totalPages.map.length > 0 ? totalPages.map((value, key) => {\r\n                        return (\r\n                            <li onClick={() => onAddPage(value.item)} className=\"page-item\">\r\n                                <span className=\"page-link\">\r\n                                    {value.item}\r\n                                </span>\r\n                            </li>\r\n                        )\r\n                    }) : null\r\n                }\r\n            </ul>\r\n        </nav>\r\n\r\n    );\r\n}\r\n\r\nexport default Pagination;"],"sourceRoot":""}