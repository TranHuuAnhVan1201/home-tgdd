{"version":3,"sources":["app/components/custommer/body/paypal/PayPal.js"],"names":["PayPal","props","listCarts","useSelector","state","GetCarts","paypal","useRef","history","useHistory","useEffect","window","Buttons","createOrder","data","actions","err","order","create","intent","purchase_units","description","amount","value","parseFloat","totalPrice","toFixed","onSuccess","payment","console","log","onApprove","a","capture","alert","payer","name","given_name","push","onError","render","current","className","ref"],"mappings":"oMAyDeA,UApDf,SAAgBC,GACZ,IAAMC,EAAYC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YACvCC,EAASC,mBACXC,EAAUC,cAyCd,OAxCAC,qBAAU,WACNC,OAAOL,OAAOM,QAAQ,CAClBC,YAAa,SAACC,EAAMC,EAASC,GACzB,OAAOD,EAAQE,MAAMC,OAAO,CACxBC,OAAQ,UACRC,eAAgB,CACZ,CACIC,YAAa,gBACbC,OAAQ,CACJC,MAAOC,WAAWtB,EAAUuB,WAAa,MAAQC,QAAQ,SAM7EC,UAAW,SAACC,GAERC,QAAQC,IAAI,6BAA8BF,GAE1C3B,EAAM0B,UAAUC,IAGpBG,UAAU,WAAD,4BAAE,WAAOjB,EAAMC,GAAb,eAAAiB,EAAA,sEACajB,EAAQE,MAAMgB,UAD3B,OACDhB,EADC,OAEPY,QAAQC,IAAIb,GACZY,QAAQC,IAAIhB,GACZoB,MAAM,4BAA8BjB,EAAMkB,MAAMC,KAAKC,YAKpD7B,EAAQ8B,KAAK,YATP,2CAAF,qDAAC,GAWVC,QAAS,SAACvB,GACNa,QAAQC,IAAId,MAGjBwB,OAAOlC,EAAOmC,WAClB,IAGC,qBAAKC,UAAU,YAAf,SACI,qBAAKC,IAAKrC","file":"static/js/13.ef1b2341.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport './PayPal.scss';\r\nfunction PayPal(props) {\r\n    const listCarts = useSelector(state => state.GetCarts);\r\n    const paypal = useRef();\r\n    let history = useHistory();\r\n    useEffect(() => {\r\n        window.paypal.Buttons({\r\n            createOrder: (data, actions, err) => {\r\n                return actions.order.create({\r\n                    intent: \"CAPTURE\",\r\n                    purchase_units: [\r\n                        {\r\n                            description: \"Thanh toÃ¡n\",\r\n                            amount: {\r\n                                value: parseFloat(listCarts.totalPrice / 230000).toFixed(2)\r\n                            }\r\n                        }\r\n                    ]\r\n                })\r\n            },\r\n            onSuccess: (payment) => {\r\n                // Congratulation, it came here means everything's fine!\r\n                console.log(\"The payment was succeeded!\", payment);\r\n                // You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\r\n                props.onSuccess(payment);\r\n\r\n            },\r\n            onApprove: async (data, actions) => {\r\n                const order = await actions.order.capture();\r\n                console.log(order);\r\n                console.log(data);\r\n                alert('Transaction completed by ' + order.payer.name.given_name);\r\n                // return actions.order.capture().then(function (details) {\r\n                //     // This function shows a transaction success message to your buyer.\r\n                //     alert('Transaction completed by ' + details.payer.name.given_name);\r\n                // });\r\n                 history.push(\"/history\");\r\n            },\r\n            onError: (err) => {\r\n                console.log(err);\r\n            }\r\n           \r\n        }).render(paypal.current)\r\n    }, [])\r\n    \r\n    return (\r\n        <div className=\"paypal-av\">\r\n            <div ref={paypal}></div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PayPal;"],"sourceRoot":""}